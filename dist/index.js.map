{"version":3,"sources":["../src/hooks/useConsentStorage.ts","../src/utils/consentUtils.ts","../src/utils/themeUtils.ts","../src/components/ConsentProvider.tsx","../src/hooks/useConsent.ts","../src/components/ConsentBanner.tsx","../src/components/ConsentToggle.tsx","../src/components/ConsentCategory.tsx","../src/components/ConsentModal.tsx","../src/index.ts"],"names":["useConsentStorage","storageKey","isStorageAvailable","saveConsent","useCallback","record","recordToSave","serializedRecord","error","loadConsent","validStatuses","validDecisions","d","isValid","parsedRecord","clearConsent","generateSessionId","createConsentRecord","sessionId","decisions","version","userId","isValidConsentRecord","currentVersion","getConsentValue","categoryId","mergeConsentDecisions","existing","updates","merged","update","existingIndex","hasExpiredConsent","expirationDays","expirationDate","sanitizeConsentRecord","applyConsentTheme","theme","root","removeConsentTheme","property","getDefaultTheme","getDarkTheme","ConsentContext","createContext","ConsentProvider","children","config","isVisible","setIsVisible","useState","isPreferencesVisible","setIsPreferencesVisible","consentRecord","setConsentRecord","initialized","useRef","useEffect","c","savedConsent","category","mergedDecisions","mergedRecord","initialDecisions","defaultRecord","showDelay","cat","showBanner","hideBanner","showPreferences","hidePreferences","updateConsentRecord","acceptAll","rejectAll","updateConsent","accepted","currentDecisions","existingDecisions","newDecision","allDecisions","getConsent","decision","getAllConsent","hasConsent","resetConsent","contextValue","jsx","useConsentContext","context","useContext","useConsent","ConsentBanner","className","style","onAcceptAll","onRejectAll","onManagePreferences","handleAcceptAll","handleRejectAll","handleManagePreferences","bannerClasses","jsxs","Fragment","ConsentToggle","checked","onChange","disabled","size","label","toggleClasses","event","ConsentCategory","value","categoryClasses","ConsentModal","isOpen","onClose","showBackdrop","handleSavePreferences","modalClasses","currentValue","defaultPrivacySettings","defaultBannerConfig","defaultConsentTexts","defaultPrivacyConsentConfig"],"mappings":"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","file":"index.js","sourcesContent":["import { useCallback } from 'react';\r\nimport { ConsentRecord, UseConsentStorageReturn } from '../types';\r\n\r\nexport function useConsentStorage(storageKey: string): UseConsentStorageReturn {\r\n  const isStorageAvailable = typeof Storage !== 'undefined';\r\n  const saveConsent = useCallback((record: ConsentRecord) => {\r\n    if (!isStorageAvailable) {\r\n      console.warn('Storage is not available, cannot save consent');\r\n      return;\r\n    }\r\n    \r\n    try {\r\n      // Make sure we have a valid record to save\r\n      if (!record || !record.decisions || !Array.isArray(record.decisions) || record.decisions.length === 0) {\r\n        console.error('Cannot save invalid consent record', record);\r\n        return;\r\n      }\r\n      \r\n      // Clone the record to avoid reference issues\r\n      const recordToSave = {\r\n        ...record,\r\n        decisions: [...record.decisions]\r\n      };\r\n      \r\n      const serializedRecord = JSON.stringify(recordToSave);\r\n      console.log(`Saving consent to localStorage (key: ${storageKey}):`, recordToSave);\r\n      localStorage.setItem(storageKey, serializedRecord);\r\n    } catch (error) {\r\n      console.error('Failed to save consent to localStorage:', error);\r\n    }\r\n  }, [storageKey, isStorageAvailable]);  const loadConsent = useCallback((): ConsentRecord | null => {\r\n    if (!isStorageAvailable) {\r\n      console.warn('Storage is not available, cannot load consent');\r\n      return null;\r\n    }\r\n    \r\n    try {\r\n      console.log(`Loading consent from localStorage (key: ${storageKey})`);\r\n      const serializedRecord = localStorage.getItem(storageKey);\r\n      \r\n      if (!serializedRecord) {\r\n        console.log('No saved consent found in localStorage');\r\n        return null;\r\n      }\r\n      \r\n      console.log('Found serialized consent record:', serializedRecord.substring(0, 100) + '...');\r\n      \r\n      const record = JSON.parse(serializedRecord);\r\n      console.log('Parsed consent record:', record);\r\n      \r\n      // Validate the loaded record has all required properties\r\n      if (!record || !record.decisions || !Array.isArray(record.decisions) || \r\n          !record.version || !record.sessionId || !record.lastUpdated) {\r\n        console.warn('Consent record missing required fields, discarding', record);\r\n        return null;\r\n      }\r\n      \r\n      // Validate each decision has the required properties\r\n      const validStatuses = ['accepted', 'rejected', 'pending'];\r\n      const validDecisions = record.decisions.filter((d: any) => {\r\n        const isValid = d && d.categoryId && typeof d.categoryId === 'string' && \r\n                        d.status && validStatuses.indexOf(d.status) !== -1 &&\r\n                        d.timestamp && d.version;\r\n                        \r\n        if (!isValid) {\r\n          console.warn('Invalid decision found:', d);\r\n        }\r\n        \r\n        return isValid;\r\n      });\r\n      \r\n      if (validDecisions.length !== record.decisions.length) {\r\n        console.warn('Some consent decisions were invalid and filtered out', \r\n                     'Valid:', validDecisions.length, \r\n                     'Total:', record.decisions.length);\r\n      }\r\n      \r\n      if (validDecisions.length === 0) {\r\n        console.warn('No valid consent decisions found, discarding record');\r\n        return null;\r\n      }\r\n      \r\n      // Convert timestamp strings back to Date objects\r\n      const parsedRecord = {\r\n        ...record,\r\n        lastUpdated: new Date(record.lastUpdated),\r\n        decisions: validDecisions.map((d: any) => ({\r\n          ...d,\r\n          timestamp: new Date(d.timestamp)\r\n        }))\r\n      };\r\n        console.log('Successfully loaded consent record with', \r\n                  parsedRecord.decisions.length, 'valid decisions:', \r\n                  parsedRecord.decisions.map((d: any) => `${d.categoryId}:${d.status}`).join(', '));\r\n      \r\n      return parsedRecord;\r\n    } catch (error) {\r\n      console.warn('Failed to load consent from localStorage:', error);\r\n      return null;\r\n    }\r\n  }, [storageKey, isStorageAvailable]);\r\n  const clearConsent = useCallback(() => {\r\n    if (!isStorageAvailable) {\r\n      console.warn('Storage is not available, cannot clear consent');\r\n      return;\r\n    }\r\n    \r\n    try {\r\n      console.log(`Clearing consent from localStorage (key: ${storageKey})`);\r\n      localStorage.removeItem(storageKey);\r\n      console.log('Consent data cleared successfully');\r\n    } catch (error) {\r\n      console.error('Failed to clear consent from localStorage:', error);\r\n    }\r\n  }, [storageKey, isStorageAvailable]);\r\n\r\n  return {\r\n    saveConsent,\r\n    loadConsent,\r\n    clearConsent,\r\n    isStorageAvailable\r\n  };\r\n}\r\n","import { ConsentRecord, ConsentDecision } from '../types';\r\n\r\nexport function generateSessionId(): string {\r\n  return 'session_' + Date.now() + '_' + Math.random().toString(36).substring(2, 15);\r\n}\r\n\r\nexport function createConsentRecord(\r\n  sessionId: string,\r\n  decisions: ConsentDecision[],\r\n  version: string,\r\n  userId?: string\r\n): ConsentRecord {\r\n  return {\r\n    userId,\r\n    sessionId,\r\n    decisions,\r\n    lastUpdated: new Date(),\r\n    version,\r\n    userAgent: typeof navigator !== 'undefined' ? navigator.userAgent : undefined,\r\n  };\r\n}\r\n\r\nexport function isValidConsentRecord(record: ConsentRecord, currentVersion: string): boolean {\r\n  return Boolean(\r\n    record &&\r\n    record.version === currentVersion &&\r\n    record.decisions &&\r\n    Array.isArray(record.decisions) &&\r\n    record.lastUpdated &&\r\n    record.sessionId\r\n  );\r\n}\r\n\r\nexport function getConsentValue(record: ConsentRecord | null, categoryId: string): boolean {\r\n  if (!record) return false;\r\n  \r\n  const decision = record.decisions.find((d: ConsentDecision) => d.categoryId === categoryId);\r\n  return decision?.status === 'accepted';\r\n}\r\n\r\nexport function mergeConsentDecisions(\r\n  existing: ConsentDecision[],\r\n  updates: ConsentDecision[]\r\n): ConsentDecision[] {\r\n  const merged = [...existing];\r\n  \r\n  updates.forEach(update => {\r\n    const existingIndex = merged.findIndex((d: ConsentDecision) => d.categoryId === update.categoryId);\r\n    if (existingIndex >= 0) {\r\n      merged[existingIndex] = update;\r\n    } else {\r\n      merged.push(update);\r\n    }\r\n  });\r\n  \r\n  return merged;\r\n}\r\n\r\nexport function hasExpiredConsent(record: ConsentRecord, expirationDays: number): boolean {\r\n  if (!record.lastUpdated) return true;\r\n  \r\n  const expirationDate = new Date(record.lastUpdated);\r\n  expirationDate.setDate(expirationDate.getDate() + expirationDays);\r\n  \r\n  return expirationDate <= new Date();\r\n}\r\n\r\nexport function sanitizeConsentRecord(record: ConsentRecord): ConsentRecord {\r\n  return {\r\n    userId: record.userId,\r\n    sessionId: record.sessionId,\r\n    decisions: record.decisions.map((d: ConsentDecision) => ({\r\n      categoryId: d.categoryId,\r\n      status: d.status,\r\n      timestamp: new Date(d.timestamp),\r\n      version: d.version\r\n    })),\r\n    lastUpdated: new Date(record.lastUpdated),\r\n    version: record.version,\r\n    ipAddress: record.ipAddress,\r\n    userAgent: record.userAgent\r\n  };\r\n}\r\n","import { ConsentTheme } from '../types';\r\n\r\nexport function applyConsentTheme(theme: ConsentTheme): void {\r\n  const root = document.documentElement;\r\n  \r\n  // Apply CSS custom properties\r\n  root.style.setProperty('--consent-primary-color', theme.primaryColor);\r\n  root.style.setProperty('--consent-secondary-color', theme.secondaryColor);\r\n  root.style.setProperty('--consent-background-color', theme.backgroundColor);\r\n  root.style.setProperty('--consent-text-color', theme.textColor);\r\n  root.style.setProperty('--consent-border-color', theme.borderColor);\r\n  root.style.setProperty('--consent-border-radius', theme.borderRadius);\r\n  root.style.setProperty('--consent-font-family', theme.fontFamily);\r\n  root.style.setProperty('--consent-font-size', theme.fontSize);\r\n  root.style.setProperty('--consent-button-style', theme.buttonStyle);\r\n  root.style.setProperty('--consent-shadow', theme.shadow ? '0 4px 6px rgba(0, 0, 0, 0.1)' : 'none');\r\n}\r\n\r\nexport function removeConsentTheme(): void {\r\n  const root = document.documentElement;\r\n  \r\n  const themeProperties = [\r\n    '--consent-primary-color',\r\n    '--consent-secondary-color',\r\n    '--consent-background-color',\r\n    '--consent-text-color',\r\n    '--consent-border-color',\r\n    '--consent-border-radius',\r\n    '--consent-font-family',\r\n    '--consent-font-size',\r\n    '--consent-button-style',\r\n    '--consent-shadow'\r\n  ];\r\n  \r\n  themeProperties.forEach(property => {\r\n    root.style.removeProperty(property);\r\n  });\r\n}\r\n\r\nexport function getDefaultTheme(): ConsentTheme {\r\n  return {\r\n    primaryColor: '#007bff',\r\n    secondaryColor: '#6c757d',\r\n    backgroundColor: '#ffffff',\r\n    textColor: '#212529',\r\n    borderColor: '#dee2e6',\r\n    borderRadius: '0.375rem',\r\n    fontFamily: 'system-ui, -apple-system, sans-serif',\r\n    fontSize: '14px',\r\n    buttonStyle: 'solid',\r\n    shadow: true\r\n  };\r\n}\r\n\r\nexport function getDarkTheme(): ConsentTheme {\r\n  return {\r\n    primaryColor: '#0d6efd',\r\n    secondaryColor: '#adb5bd',\r\n    backgroundColor: '#212529',\r\n    textColor: '#ffffff',\r\n    borderColor: '#495057',\r\n    borderRadius: '0.375rem',\r\n    fontFamily: 'system-ui, -apple-system, sans-serif',\r\n    fontSize: '14px',\r\n    buttonStyle: 'solid',\r\n    shadow: true\r\n  };\r\n}\r\n","import React, { createContext, useContext, useState, useEffect, useCallback, useRef, ReactNode } from 'react';\nimport { \n  ConsentContextType, \n  PrivacyConsentConfig, \n  ConsentRecord, \n  ConsentDecision,\n  ConsentStatus \n} from '../types';\nimport { useConsentStorage } from '../hooks/useConsentStorage';\nimport { generateSessionId, createConsentRecord } from '../utils/consentUtils';\nimport { applyConsentTheme } from '../utils/themeUtils';\n\nexport interface ConsentProviderProps {\n  children: ReactNode;\n  config: PrivacyConsentConfig;\n}\n\nconst ConsentContext = createContext<ConsentContextType | undefined>(undefined);\n\nexport function ConsentProvider({ children, config }: ConsentProviderProps) {\n  const [isVisible, setIsVisible] = useState(false);\n  const [isPreferencesVisible, setIsPreferencesVisible] = useState(false);\n  const [consentRecord, setConsentRecord] = useState<ConsentRecord | null>(null);\n  const [sessionId] = useState(() => generateSessionId());\n  \n  const initialized = useRef(false);\n  \n  const { saveConsent, loadConsent, clearConsent } = useConsentStorage(config.settings.storageKey);  // Initialize consent record\n  useEffect(() => {\n    if (initialized.current) {\n      console.log('[ConsentProvider] Already initialized, skipping');\n      return;\n    }\n    \n    console.log('[ConsentProvider] useEffect triggered - initializing consent');\n    console.log('[ConsentProvider] Config version:', config.settings.version);\n    console.log('[ConsentProvider] Config categories:', config.settings.categories.map(c => c.id));\n    \n    const savedConsent = loadConsent();\n    console.log('Loaded consent from storage:', savedConsent ? 'found' : 'not found');\n    \n    if (savedConsent && savedConsent.version === config.settings.version) {\n      console.log('Consent version matches current version:', config.settings.version);\n      \n      // Check if consent is still valid\n      const expirationDate = new Date(savedConsent.lastUpdated);\n      expirationDate.setDate(expirationDate.getDate() + config.settings.expirationDays);\n      \n      if (expirationDate > new Date()) {\n        console.log('Consent is not expired, valid until:', expirationDate);\n        \n        // Ensure all configured categories exist in the saved consent\n        const allCategoriesPresent = config.settings.categories.every(category => \n          savedConsent.decisions.some(d => d.categoryId === category.id)\n        );\n        \n        if (allCategoriesPresent) {\n          // All categories found, use the saved consent\n          console.log('[ConsentProvider] All categories present in saved consent, using it', savedConsent.decisions);\n          console.log('[ConsentProvider] Setting consent record to:', savedConsent);\n          setConsentRecord(savedConsent);\n          console.log('[ConsentProvider] Consent record set successfully, returning early');\n          initialized.current = true;\n          return;\n        } else {\n          console.log('[ConsentProvider] Some categories missing in saved consent, merging with defaults');\n          // Some categories are missing, merge with defaults\n          const mergedDecisions: ConsentDecision[] = [...savedConsent.decisions];\n          \n          // Add any missing categories with their default values\n          config.settings.categories.forEach(category => {\n            const exists = savedConsent.decisions.some(d => d.categoryId === category.id);\n            if (!exists) {\n              mergedDecisions.push({\n                categoryId: category.id,\n                status: category.required ? 'accepted' : (category.defaultValue ? 'accepted' : 'rejected') as ConsentStatus,\n                timestamp: new Date(),\n                version: config.settings.version\n              });\n            }\n          });\n          \n          // Create a new record with the merged decisions\n          const mergedRecord = createConsentRecord(\n            savedConsent.sessionId, \n            mergedDecisions, \n            config.settings.version\n          );\n          \n          console.log('[ConsentProvider] Setting merged consent record:', mergedRecord);\n          setConsentRecord(mergedRecord);\n          saveConsent(mergedRecord);\n          initialized.current = true;\n          return;\n        }\n      } else {\n        console.log('[ConsentProvider] Consent is expired, expired on:', expirationDate);\n      }\n    } else {\n      console.log('[ConsentProvider] No valid consent found or version mismatch');\n      if (savedConsent) {\n        console.log('[ConsentProvider] Saved consent version:', savedConsent.version);\n        console.log('[ConsentProvider] Expected version:', config.settings.version);\n      }\n    }\n    \n    // Create a default consent record when none is found\n    // This ensures we always have a valid record with default values\n    console.log('[ConsentProvider] Creating default consent record');\n    const initialDecisions: ConsentDecision[] = config.settings.categories.map(category => ({\n      categoryId: category.id,\n      status: category.required ? 'accepted' : (category.defaultValue ? 'accepted' : 'rejected') as ConsentStatus,\n      timestamp: new Date(),\n      version: config.settings.version\n    }));\n    \n    const defaultRecord = createConsentRecord(sessionId, initialDecisions, config.settings.version);\n    console.log('[ConsentProvider] Setting initial default consent record:', defaultRecord);\n    setConsentRecord(defaultRecord);\n    \n    // Show banner if no valid consent found\n    const showDelay = config.settings.autoShowDelay || 0;\n    setTimeout(() => {\n      if (!savedConsent || savedConsent.version !== config.settings.version) {\n        console.log('[ConsentProvider] Showing consent banner');\n        setIsVisible(true);\n        config.onBannerShow?.();\n      }\n    }, showDelay);\n    \n    initialized.current = true;\n  }, []); // Remove dependencies to prevent re-initialization\n\n  // Apply theme\n  useEffect(() => {\n    if (config.theme) {\n      applyConsentTheme(config.theme);\n    }\n  }, [config.theme]);\n\n  // Respect Do Not Track\n  useEffect(() => {\n    if (config.settings.respectDoNotTrack && navigator.doNotTrack === '1') {\n      const record = createConsentRecord(\n        sessionId,\n        config.settings.categories.map(cat => ({\n          categoryId: cat.id,\n          status: cat.required ? 'accepted' : 'rejected' as ConsentStatus,\n          timestamp: new Date(),\n          version: config.settings.version\n        })),\n        config.settings.version\n      );\n      setConsentRecord(record);\n      saveConsent(record);\n      setIsVisible(false);\n    }\n  }, [config.settings, sessionId, saveConsent]);\n\n  const showBanner = useCallback(() => {\n    setIsVisible(true);\n    config.onBannerShow?.();\n  }, [config]);\n\n  const hideBanner = useCallback(() => {\n    setIsVisible(false);\n    config.onBannerHide?.();\n  }, [config]);\n\n  const showPreferences = useCallback(() => {\n    setIsPreferencesVisible(true);\n  }, []);\n\n  const hidePreferences = useCallback(() => {\n    setIsPreferencesVisible(false);\n  }, []);\n  const updateConsentRecord = useCallback((decisions: ConsentDecision[]) => {\n    const record = createConsentRecord(sessionId, decisions, config.settings.version);\n    setConsentRecord(record);\n    saveConsent(record);\n    config.onConsentChange?.(record);\n    return record;\n  }, [sessionId, config, saveConsent]);\n\n  const acceptAll = useCallback(() => {\n    const decisions: ConsentDecision[] = config.settings.categories.map(category => ({\n      categoryId: category.id,\n      status: 'accepted' as ConsentStatus,\n      timestamp: new Date(),\n      version: config.settings.version\n    }));\n    \n    updateConsentRecord(decisions);\n    setIsVisible(false);\n    setIsPreferencesVisible(false);\n    config.onBannerHide?.();\n  }, [config, updateConsentRecord]);\n\n  const rejectAll = useCallback(() => {\n    const decisions: ConsentDecision[] = config.settings.categories.map(category => ({\n      categoryId: category.id,\n      status: category.required ? 'accepted' : 'rejected' as ConsentStatus,\n      timestamp: new Date(),\n      version: config.settings.version\n    }));\n    \n    updateConsentRecord(decisions);\n    setIsVisible(false);\n    setIsPreferencesVisible(false);\n    config.onBannerHide?.();\n  }, [config, updateConsentRecord]);  const updateConsent = useCallback((categoryId: string, accepted: boolean) => {\n    console.log(`Updating consent for category ${categoryId} to ${accepted ? 'accepted' : 'rejected'}`);\n    \n    // Create initial decisions from default values if no consent record exists\n    let currentDecisions;\n    \n    if (consentRecord && Array.isArray(consentRecord.decisions)) {\n      console.log('Using existing consent record decisions');\n      currentDecisions = [...consentRecord.decisions];\n    } else {\n      console.log('No existing consent record, creating default decisions');\n      currentDecisions = config.settings.categories.map(category => ({\n        categoryId: category.id,\n        status: category.defaultValue ? 'accepted' : 'rejected' as ConsentStatus,\n        timestamp: new Date(),\n        version: config.settings.version\n      }));\n    }\n    \n    // Filter out the category we're updating\n    const existingDecisions = currentDecisions.filter((d: ConsentDecision) => d.categoryId !== categoryId);\n    \n    // Create the new decision\n    const newDecision: ConsentDecision = {\n      categoryId,\n      status: accepted ? 'accepted' : 'rejected' as ConsentStatus,\n      timestamp: new Date(),\n      version: config.settings.version\n    };\n    \n    // Combine all decisions\n    const allDecisions = [...existingDecisions, newDecision];\n    console.log('Updated decisions:', \n      allDecisions.map((d: ConsentDecision) => `${d.categoryId}: ${d.status}`).join(', '));\n    \n    // Save the updated consent record using updateConsentRecord which handles storage\n    const updatedRecord = updateConsentRecord(allDecisions);\n    \n    return updatedRecord;\n  }, [consentRecord, config.settings.version, config.settings.categories, updateConsentRecord, saveConsent]);\n  const getConsent = useCallback((categoryId: string): ConsentStatus => {\n    if (!consentRecord) {\n      // If no consent record exists, use default values\n      const category = config.settings.categories.find(c => c.id === categoryId);\n      return category?.defaultValue ? 'accepted' : 'pending';\n    }\n    \n    const decision = consentRecord.decisions.find((d: ConsentDecision) => d.categoryId === categoryId);\n    if (decision) {\n      return decision.status;\n    }\n    \n    // If no decision found, use default value\n    const category = config.settings.categories.find(c => c.id === categoryId);\n    return category?.defaultValue ? 'accepted' : 'pending';\n  }, [consentRecord, config.settings.categories]);\n\n  const getAllConsent = useCallback(() => {\n    return consentRecord;\n  }, [consentRecord]);\n\n  const hasConsent = useCallback((categoryId: string): boolean => {\n    return getConsent(categoryId) === 'accepted';\n  }, [getConsent]);  const resetConsent = useCallback(() => {\n    console.log('Resetting consent to default state');\n    \n    // Clear consent from storage\n    clearConsent();\n    \n    // Create initial decisions based on defaults\n    const initialDecisions: ConsentDecision[] = config.settings.categories.map(category => ({\n      categoryId: category.id,\n      status: category.required ? 'accepted' : (category.defaultValue ? 'accepted' : 'rejected') as ConsentStatus,\n      timestamp: new Date(),\n      version: config.settings.version\n    }));\n    \n    console.log('Initial decisions after reset:', \n      initialDecisions.map(d => `${d.categoryId}: ${d.status}`).join(', '));\n    \n    // Create a new consent record but DON'T save it to storage yet\n    // We want the user to explicitly accept or reject cookies\n    // We'll reuse the existing sessionId to maintain consistency\n    const record = createConsentRecord(sessionId, initialDecisions, config.settings.version);\n    \n    // Update the state with new session ID and defaults\n    setConsentRecord(record);\n    \n    // Show the banner and hide preferences\n    setIsVisible(true);\n    setIsPreferencesVisible(false);\n    \n    // Trigger the callback\n    config.onBannerShow?.();\n    \n    console.log('Consent reset complete, banner shown, waiting for user action');\n  }, [clearConsent, config, config.settings.categories, config.settings.version]);\n\n  const contextValue: ConsentContextType = {\n    isVisible,\n    showBanner,\n    hideBanner,\n    showPreferences,\n    hidePreferences,\n    acceptAll,\n    rejectAll,\n    updateConsent,\n    getConsent,\n    getAllConsent,\n    hasConsent,\n    resetConsent,\n    isPreferencesVisible,\n    consentRecord,\n    config\n  };\n\n  return (\n    <ConsentContext.Provider value={contextValue}>\n      {children}\n    </ConsentContext.Provider>\n  );\n}\n\nexport function useConsentContext(): ConsentContextType {\n  const context = useContext(ConsentContext);\n  if (context === undefined) {\n    throw new Error('useConsentContext must be used within a ConsentProvider');\n  }\n  return context;\n}\n","import { useConsentContext } from '../components/ConsentProvider';\r\nimport { UseConsentReturn } from '../types';\r\n\r\n/**\r\n * Hook to access privacy consent functionality\r\n * Must be used within a ConsentProvider\r\n */\r\nexport function useConsent(): UseConsentReturn {\r\n  return useConsentContext();\r\n}\r\n","import React from 'react';\r\nimport { ConsentBannerProps } from '../types';\r\nimport { useConsent } from '../hooks/useConsent';\r\n\r\nexport function ConsentBanner({ \r\n  className = '', \r\n  style = {}, \r\n  onAcceptAll,\r\n  onRejectAll,\r\n  onManagePreferences,\r\n  children \r\n}: ConsentBannerProps) {\r\n  const { \r\n    isVisible, \r\n    acceptAll, \r\n    rejectAll, \r\n    showPreferences, \r\n    config \r\n  } = useConsent();\r\n\r\n  if (!isVisible) return null;\r\n\r\n  const handleAcceptAll = () => {\r\n    acceptAll();\r\n    onAcceptAll?.();\r\n  };\r\n\r\n  const handleRejectAll = () => {\r\n    rejectAll();\r\n    onRejectAll?.();\r\n  };\r\n\r\n  const handleManagePreferences = () => {\r\n    showPreferences();\r\n    onManagePreferences?.();\r\n  };\r\n\r\n  const bannerClasses = [\r\n    'consent-banner',\r\n    `consent-banner--${config.banner.position}`,\r\n    `consent-banner--${config.banner.layout}`,\r\n    config.banner.animation ? 'consent-banner--animated' : '',\r\n    className\r\n  ].filter(Boolean).join(' ');\r\n\r\n  return (\r\n    <>\r\n      {config.banner.backdrop && <div className=\"consent-backdrop\" />}\r\n      <div \r\n        className={bannerClasses}\r\n        style={style}\r\n        role=\"dialog\"\r\n        aria-labelledby=\"consent-title\"\r\n        aria-describedby=\"consent-description\"\r\n      >\r\n        {children || (\r\n          <div className=\"consent-banner__content\">\r\n            <div className=\"consent-banner__text\">\r\n              <h3 id=\"consent-title\" className=\"consent-banner__title\">\r\n                {config.texts.title}\r\n              </h3>\r\n              <p id=\"consent-description\" className=\"consent-banner__description\">\r\n                {config.texts.description}\r\n              </p>\r\n              {(config.texts.learnMoreUrl || config.texts.privacyPolicyUrl) && (\r\n                <div className=\"consent-banner__links\">\r\n                  {config.texts.learnMoreUrl && (\r\n                    <a \r\n                      href={config.texts.learnMoreUrl}\r\n                      target=\"_blank\"\r\n                      rel=\"noopener noreferrer\"\r\n                      className=\"consent-banner__link\"\r\n                    >\r\n                      {config.texts.learnMoreText}\r\n                    </a>\r\n                  )}\r\n                  {config.texts.privacyPolicyUrl && (\r\n                    <a \r\n                      href={config.texts.privacyPolicyUrl}\r\n                      target=\"_blank\"\r\n                      rel=\"noopener noreferrer\"\r\n                      className=\"consent-banner__link\"\r\n                    >\r\n                      Privacy Policy\r\n                    </a>\r\n                  )}\r\n                </div>\r\n              )}\r\n            </div>\r\n            \r\n            <div className=\"consent-banner__actions\">\r\n              {config.settings.showAcceptAll && (\r\n                <button\r\n                  onClick={handleAcceptAll}\r\n                  className=\"consent-button consent-button--primary\"\r\n                  type=\"button\"\r\n                >\r\n                  {config.texts.acceptAllText}\r\n                </button>\r\n              )}\r\n              \r\n              {config.settings.showDeclineAll && (\r\n                <button\r\n                  onClick={handleRejectAll}\r\n                  className=\"consent-button consent-button--secondary\"\r\n                  type=\"button\"\r\n                >\r\n                  {config.texts.rejectAllText}\r\n                </button>\r\n              )}\r\n              \r\n              {config.settings.showManagePreferences && (\r\n                <button\r\n                  onClick={handleManagePreferences}\r\n                  className=\"consent-button consent-button--ghost\"\r\n                  type=\"button\"\r\n                >\r\n                  {config.texts.managePreferencesText}\r\n                </button>\r\n              )}\r\n            </div>\r\n            \r\n            {config.banner.showCloseButton && (\r\n              <button\r\n                onClick={handleRejectAll}\r\n                className=\"consent-banner__close\"\r\n                aria-label={config.texts.closeText}\r\n                type=\"button\"\r\n              >\r\n                ×\r\n              </button>\r\n            )}\r\n            \r\n            {config.texts.poweredByText && (\r\n              <div className=\"consent-banner__powered-by\">\r\n                {config.texts.poweredByText}\r\n              </div>\r\n            )}\r\n          </div>\r\n        )}\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { ConsentToggleProps } from '../types';\r\n\r\nexport function ConsentToggle({ \r\n  checked, \r\n  onChange, \r\n  disabled = false, \r\n  size = 'md', \r\n  className = '', \r\n  label \r\n}: ConsentToggleProps) {\r\n  const toggleClasses = [\r\n    'consent-toggle',\r\n    `consent-toggle--${size}`,\r\n    checked ? 'consent-toggle--checked' : '',\r\n    disabled ? 'consent-toggle--disabled' : '',\r\n    className\r\n  ].filter(Boolean).join(' ');\r\n\r\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    if (!disabled) {\r\n      onChange(event.target.checked);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <label className={toggleClasses}>\r\n      <input\r\n        type=\"checkbox\"\r\n        checked={checked}\r\n        onChange={handleChange}\r\n        disabled={disabled}\r\n        className=\"consent-toggle__input\"\r\n        aria-label={label}\r\n      />\r\n      <span className=\"consent-toggle__slider\"></span>\r\n      {label && <span className=\"consent-toggle__label\">{label}</span>}\r\n    </label>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { ConsentCategoryProps } from '../types';\r\nimport { ConsentToggle } from './ConsentToggle';\r\n\r\nexport function ConsentCategory({ \r\n  category, \r\n  value, \r\n  onChange, \r\n  disabled = false, \r\n  className = '' \r\n}: ConsentCategoryProps) {\r\n  const categoryClasses = [\r\n    'consent-category',\r\n    disabled ? 'consent-category--disabled' : '',\r\n    category.required ? 'consent-category--required' : '',\r\n    className\r\n  ].filter(Boolean).join(' ');\r\n\r\n  return (\r\n    <div className={categoryClasses}>\r\n      <div className=\"consent-category__header\">\r\n        <h4 className=\"consent-category__name\">{category.name}</h4>\r\n        <ConsentToggle\r\n          checked={value}\r\n          onChange={onChange}\r\n          disabled={disabled}\r\n          size=\"md\"\r\n        />\r\n      </div>\r\n      <p className=\"consent-category__description\">{category.description}</p>\r\n      {category.required && (\r\n        <span className=\"consent-category__required-badge\">\r\n          Required\r\n        </span>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { ConsentModalProps } from '../types';\r\nimport { useConsent } from '../hooks/useConsent';\r\nimport { ConsentCategory } from './ConsentCategory';\r\n\r\nexport function ConsentModal({ \r\n  isOpen, \r\n  onClose, \r\n  className = '', \r\n  style = {},\r\n  showBackdrop = true\r\n}: ConsentModalProps) {  const { \r\n    config, \r\n    consentRecord, \r\n    updateConsent, \r\n    acceptAll, \r\n    rejectAll,\r\n    hidePreferences,\r\n    hideBanner,\r\n    getConsent\r\n  } = useConsent();\r\n\r\n  if (!isOpen) return null;\r\n  \r\n  const handleSavePreferences = () => {\r\n    // First hide the preferences modal\r\n    hidePreferences();\r\n    // Then hide the banner\r\n    hideBanner(); \r\n    // Finally close the modal\r\n    onClose();\r\n  };\r\n  const handleAcceptAll = () => {\r\n    // Accept all cookies and close the modal\r\n    acceptAll();\r\n    onClose();\r\n  };\r\n\r\n  const handleRejectAll = () => {\r\n    // Reject all non-required cookies and close the modal\r\n    rejectAll();\r\n    onClose();\r\n  };\r\n\r\n  const modalClasses = [\r\n    'consent-modal',\r\n    className\r\n  ].filter(Boolean).join(' ');\r\n\r\n  return (\r\n    <>\r\n      {showBackdrop && (\r\n        <div \r\n          className=\"consent-modal__backdrop\" \r\n          onClick={onClose}\r\n          role=\"presentation\"\r\n        />\r\n      )}\r\n      <div \r\n        className={modalClasses}\r\n        style={style}\r\n        role=\"dialog\"\r\n        aria-labelledby=\"consent-modal-title\"\r\n        aria-modal=\"true\"\r\n      >\r\n        <div className=\"consent-modal__content\">\r\n          <div className=\"consent-modal__header\">\r\n            <h2 id=\"consent-modal-title\" className=\"consent-modal__title\">\r\n              {config.texts.managePreferencesText}\r\n            </h2>\r\n            <button\r\n              onClick={onClose}\r\n              className=\"consent-modal__close\"\r\n              aria-label={config.texts.closeText}\r\n              type=\"button\"\r\n            >\r\n              ×\r\n            </button>\r\n          </div>\r\n          \r\n          <div className=\"consent-modal__body\">\r\n            <p className=\"consent-modal__description\">\r\n              {config.texts.description}\r\n            </p>\r\n              <div className=\"consent-modal__categories\">\r\n              {config.settings.categories.map((category) => {\r\n                const currentValue = getConsent(category.id) === 'accepted';\r\n                \r\n                return (\r\n                  <ConsentCategory\r\n                    key={category.id}\r\n                    category={category}\r\n                    value={currentValue}\r\n                    onChange={(accepted) => updateConsent(category.id, accepted)}\r\n                    disabled={category.required}\r\n                  />\r\n                );\r\n              })}\r\n            </div>\r\n            \r\n            {(config.texts.privacyPolicyUrl || config.texts.cookiePolicyUrl) && (\r\n              <div className=\"consent-modal__links\">\r\n                {config.texts.privacyPolicyUrl && (\r\n                  <a \r\n                    href={config.texts.privacyPolicyUrl}\r\n                    target=\"_blank\"\r\n                    rel=\"noopener noreferrer\"\r\n                    className=\"consent-modal__link\"\r\n                  >\r\n                    Privacy Policy\r\n                  </a>\r\n                )}\r\n                {config.texts.cookiePolicyUrl && (\r\n                  <a \r\n                    href={config.texts.cookiePolicyUrl}\r\n                    target=\"_blank\"\r\n                    rel=\"noopener noreferrer\"\r\n                    className=\"consent-modal__link\"\r\n                  >\r\n                    Cookie Policy\r\n                  </a>\r\n                )}\r\n              </div>\r\n            )}\r\n          </div>\r\n          \r\n          <div className=\"consent-modal__footer\">\r\n            <div className=\"consent-modal__actions\">\r\n              <button\r\n                onClick={handleSavePreferences}\r\n                className=\"consent-button consent-button--primary\"\r\n                type=\"button\"\r\n              >\r\n                {config.texts.savePreferencesText}\r\n              </button>\r\n              \r\n              {config.settings.showAcceptAll && (\r\n                <button\r\n                  onClick={handleAcceptAll}\r\n                  className=\"consent-button consent-button--secondary\"\r\n                  type=\"button\"\r\n                >\r\n                  {config.texts.acceptAllText}\r\n                </button>\r\n              )}\r\n              \r\n              {config.settings.showDeclineAll && (\r\n                <button\r\n                  onClick={handleRejectAll}\r\n                  className=\"consent-button consent-button--ghost\"\r\n                  type=\"button\"\r\n                >\r\n                  {config.texts.rejectAllText}\r\n                </button>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","// Main exports\r\nexport { ConsentProvider, useConsentContext } from './components/ConsentProvider';\r\nexport { ConsentBanner } from './components/ConsentBanner';\r\nexport { ConsentModal } from './components/ConsentModal';\r\nexport { ConsentCategory } from './components/ConsentCategory';\r\nexport { ConsentToggle } from './components/ConsentToggle';\r\n\r\n// Hooks\r\nexport { useConsent } from './hooks/useConsent';\r\nexport { useConsentStorage } from './hooks/useConsentStorage';\r\n\r\n// Utilities\r\nexport { \r\n  generateSessionId, \r\n  createConsentRecord, \r\n  isValidConsentRecord,\r\n  getConsentValue,\r\n  mergeConsentDecisions,\r\n  hasExpiredConsent,\r\n  sanitizeConsentRecord\r\n} from './utils/consentUtils';\r\n\r\nexport { \r\n  applyConsentTheme, \r\n  removeConsentTheme, \r\n  getDefaultTheme, \r\n  getDarkTheme \r\n} from './utils/themeUtils';\r\n\r\n// Types\r\nexport type {\r\n  ConsentType,\r\n  ConsentStatus,\r\n  BannerPosition,\r\n  BannerLayout,\r\n  ConsentCategory as ConsentCategoryType,\r\n  ConsentDecision,\r\n  ConsentRecord,\r\n  PrivacySettings,\r\n  BannerConfig,\r\n  ConsentTexts,\r\n  ConsentTheme,\r\n  PrivacyConsentConfig,\r\n  ConsentContextType,\r\n  ConsentBannerProps,\r\n  ConsentModalProps,\r\n  ConsentCategoryProps,\r\n  ConsentButtonProps,\r\n  ConsentToggleProps,\r\n  UseConsentReturn,\r\n  UseConsentStorageReturn,\r\n  UseConsentValidationReturn,\r\n  ConsentChangeHandler,\r\n  ConsentEventHandler,\r\n  ConsentErrorHandler\r\n} from './types';\r\n\r\n// Import types for internal use\r\nimport type {\r\n  PrivacySettings,\r\n  BannerConfig,\r\n  ConsentTexts,\r\n  PrivacyConsentConfig\r\n} from './types';\r\n\r\n// Default configurations\r\nexport const defaultPrivacySettings: PrivacySettings = {\r\n  categories: [\r\n    {\r\n      id: 'necessary',\r\n      name: 'Necessary',\r\n      description: 'Essential cookies required for basic website functionality.',\r\n      type: 'necessary',\r\n      required: true,\r\n      defaultValue: true\r\n    },\r\n    {\r\n      id: 'analytics',\r\n      name: 'Analytics',\r\n      description: 'Cookies that help us understand how visitors interact with our website.',\r\n      type: 'analytics',\r\n      required: false,\r\n      defaultValue: false\r\n    },\r\n    {\r\n      id: 'marketing',\r\n      name: 'Marketing',\r\n      description: 'Cookies used to deliver personalized advertisements.',\r\n      type: 'marketing',\r\n      required: false,\r\n      defaultValue: false\r\n    },\r\n    {\r\n      id: 'preferences',\r\n      name: 'Preferences',\r\n      description: 'Cookies that remember your preferences and settings.',\r\n      type: 'preferences',\r\n      required: false,\r\n      defaultValue: false\r\n    }\r\n  ],\r\n  version: '1.0.0',\r\n  expirationDays: 365,\r\n  storageKey: 'asafarim-privacy-consent',\r\n  showDeclineAll: true,\r\n  showAcceptAll: true,\r\n  showManagePreferences: true,\r\n  autoShowDelay: 1000,\r\n  respectDoNotTrack: true\r\n};\r\n\r\nexport const defaultBannerConfig: BannerConfig = {\r\n  position: 'bottom',\r\n  layout: 'banner',\r\n  showCloseButton: true,\r\n  showCompanyLogo: false,\r\n  blocking: false,\r\n  animation: true,\r\n  backdrop: false\r\n};\r\n\r\nexport const defaultConsentTexts: ConsentTexts = {\r\n  title: 'We value your privacy',\r\n  description: 'We use cookies and similar technologies to provide the best experience on our website. Some are necessary for functionality, while others help us understand usage and improve our services.',\r\n  acceptAllText: 'Accept All',\r\n  rejectAllText: 'Reject All',\r\n  managePreferencesText: 'Manage Preferences',\r\n  savePreferencesText: 'Save Preferences',\r\n  closeText: 'Close',\r\n  learnMoreText: 'Learn More',\r\n  poweredByText: 'Powered by @asafarim/react-privacy-consent'\r\n};\r\n\r\nexport const defaultPrivacyConsentConfig: PrivacyConsentConfig = {\r\n  settings: defaultPrivacySettings,\r\n  banner: defaultBannerConfig,\r\n  texts: defaultConsentTexts\r\n};\r\n"]}