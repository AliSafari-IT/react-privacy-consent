{"version":3,"sources":["../src/hooks/useConsentStorage.ts","../src/utils/consentUtils.ts","../src/utils/themeUtils.ts","../src/components/ConsentProvider.tsx","../src/hooks/useConsent.ts","../src/components/ConsentBanner.tsx","../src/components/ConsentToggle.tsx","../src/components/ConsentCategory.tsx","../src/components/ConsentModal.tsx","../src/index.ts"],"names":["useConsentStorage","storageKey","isStorageAvailable","saveConsent","useCallback","record","recordToSave","serializedRecord","error","loadConsent","validStatuses","validDecisions","d","isValid","parsedRecord","clearConsent","generateSessionId","createConsentRecord","sessionId","decisions","version","userId","isValidConsentRecord","currentVersion","getConsentValue","categoryId","mergeConsentDecisions","existing","updates","merged","update","existingIndex","hasExpiredConsent","expirationDays","expirationDate","sanitizeConsentRecord","applyConsentTheme","theme","root","removeConsentTheme","property","getDefaultTheme","getDarkTheme","ConsentContext","createContext","ConsentProvider","children","config","isVisible","setIsVisible","useState","isPreferencesVisible","setIsPreferencesVisible","consentRecord","setConsentRecord","useEffect","savedConsent","category","mergedDecisions","mergedRecord","initialDecisions","defaultRecord","showDelay","cat","showBanner","hideBanner","showPreferences","hidePreferences","updateConsentRecord","acceptAll","rejectAll","updateConsent","accepted","currentDecisions","existingDecisions","newDecision","allDecisions","getConsent","c","decision","getAllConsent","hasConsent","resetConsent","contextValue","jsx","useConsentContext","context","useContext","useConsent","ConsentBanner","className","style","onAcceptAll","onRejectAll","onManagePreferences","handleAcceptAll","handleRejectAll","handleManagePreferences","bannerClasses","jsxs","Fragment","ConsentToggle","checked","onChange","disabled","size","label","toggleClasses","event","ConsentCategory","value","categoryClasses","ConsentModal","isOpen","onClose","showBackdrop","handleSavePreferences","modalClasses","currentValue","defaultPrivacySettings","defaultBannerConfig","defaultConsentTexts","defaultPrivacyConsentConfig"],"mappings":"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","file":"index.js","sourcesContent":["import { useCallback } from 'react';\r\nimport { ConsentRecord, UseConsentStorageReturn } from '../types';\r\n\r\nexport function useConsentStorage(storageKey: string): UseConsentStorageReturn {\r\n  const isStorageAvailable = typeof Storage !== 'undefined';\r\n  const saveConsent = useCallback((record: ConsentRecord) => {\r\n    if (!isStorageAvailable) {\r\n      console.warn('Storage is not available, cannot save consent');\r\n      return;\r\n    }\r\n    \r\n    try {\r\n      // Make sure we have a valid record to save\r\n      if (!record || !record.decisions || !Array.isArray(record.decisions) || record.decisions.length === 0) {\r\n        console.error('Cannot save invalid consent record', record);\r\n        return;\r\n      }\r\n      \r\n      // Clone the record to avoid reference issues\r\n      const recordToSave = {\r\n        ...record,\r\n        decisions: [...record.decisions]\r\n      };\r\n      \r\n      const serializedRecord = JSON.stringify(recordToSave);\r\n      console.log(`Saving consent to localStorage (key: ${storageKey}):`, recordToSave);\r\n      localStorage.setItem(storageKey, serializedRecord);\r\n    } catch (error) {\r\n      console.error('Failed to save consent to localStorage:', error);\r\n    }\r\n  }, [storageKey, isStorageAvailable]);  const loadConsent = useCallback((): ConsentRecord | null => {\r\n    if (!isStorageAvailable) {\r\n      console.warn('Storage is not available, cannot load consent');\r\n      return null;\r\n    }\r\n    \r\n    try {\r\n      console.log(`Loading consent from localStorage (key: ${storageKey})`);\r\n      const serializedRecord = localStorage.getItem(storageKey);\r\n      \r\n      if (!serializedRecord) {\r\n        console.log('No saved consent found in localStorage');\r\n        return null;\r\n      }\r\n      \r\n      console.log('Found serialized consent record:', serializedRecord.substring(0, 100) + '...');\r\n      \r\n      const record = JSON.parse(serializedRecord);\r\n      console.log('Parsed consent record:', record);\r\n      \r\n      // Validate the loaded record has all required properties\r\n      if (!record || !record.decisions || !Array.isArray(record.decisions) || \r\n          !record.version || !record.sessionId || !record.lastUpdated) {\r\n        console.warn('Consent record missing required fields, discarding', record);\r\n        return null;\r\n      }\r\n      \r\n      // Validate each decision has the required properties\r\n      const validStatuses = ['accepted', 'rejected', 'pending'];\r\n      const validDecisions = record.decisions.filter((d: any) => {\r\n        const isValid = d && d.categoryId && typeof d.categoryId === 'string' && \r\n                        d.status && validStatuses.indexOf(d.status) !== -1 &&\r\n                        d.timestamp && d.version;\r\n                        \r\n        if (!isValid) {\r\n          console.warn('Invalid decision found:', d);\r\n        }\r\n        \r\n        return isValid;\r\n      });\r\n      \r\n      if (validDecisions.length !== record.decisions.length) {\r\n        console.warn('Some consent decisions were invalid and filtered out', \r\n                     'Valid:', validDecisions.length, \r\n                     'Total:', record.decisions.length);\r\n      }\r\n      \r\n      if (validDecisions.length === 0) {\r\n        console.warn('No valid consent decisions found, discarding record');\r\n        return null;\r\n      }\r\n      \r\n      // Convert timestamp strings back to Date objects\r\n      const parsedRecord = {\r\n        ...record,\r\n        lastUpdated: new Date(record.lastUpdated),\r\n        decisions: validDecisions.map((d: any) => ({\r\n          ...d,\r\n          timestamp: new Date(d.timestamp)\r\n        }))\r\n      };\r\n        console.log('Successfully loaded consent record with', \r\n                  parsedRecord.decisions.length, 'valid decisions:', \r\n                  parsedRecord.decisions.map((d: any) => `${d.categoryId}:${d.status}`).join(', '));\r\n      \r\n      return parsedRecord;\r\n    } catch (error) {\r\n      console.warn('Failed to load consent from localStorage:', error);\r\n      return null;\r\n    }\r\n  }, [storageKey, isStorageAvailable]);\r\n  const clearConsent = useCallback(() => {\r\n    if (!isStorageAvailable) {\r\n      console.warn('Storage is not available, cannot clear consent');\r\n      return;\r\n    }\r\n    \r\n    try {\r\n      console.log(`Clearing consent from localStorage (key: ${storageKey})`);\r\n      localStorage.removeItem(storageKey);\r\n      console.log('Consent data cleared successfully');\r\n    } catch (error) {\r\n      console.error('Failed to clear consent from localStorage:', error);\r\n    }\r\n  }, [storageKey, isStorageAvailable]);\r\n\r\n  return {\r\n    saveConsent,\r\n    loadConsent,\r\n    clearConsent,\r\n    isStorageAvailable\r\n  };\r\n}\r\n","import { ConsentRecord, ConsentDecision } from '../types';\r\n\r\nexport function generateSessionId(): string {\r\n  return 'session_' + Date.now() + '_' + Math.random().toString(36).substring(2, 15);\r\n}\r\n\r\nexport function createConsentRecord(\r\n  sessionId: string,\r\n  decisions: ConsentDecision[],\r\n  version: string,\r\n  userId?: string\r\n): ConsentRecord {\r\n  return {\r\n    userId,\r\n    sessionId,\r\n    decisions,\r\n    lastUpdated: new Date(),\r\n    version,\r\n    userAgent: typeof navigator !== 'undefined' ? navigator.userAgent : undefined,\r\n  };\r\n}\r\n\r\nexport function isValidConsentRecord(record: ConsentRecord, currentVersion: string): boolean {\r\n  return Boolean(\r\n    record &&\r\n    record.version === currentVersion &&\r\n    record.decisions &&\r\n    Array.isArray(record.decisions) &&\r\n    record.lastUpdated &&\r\n    record.sessionId\r\n  );\r\n}\r\n\r\nexport function getConsentValue(record: ConsentRecord | null, categoryId: string): boolean {\r\n  if (!record) return false;\r\n  \r\n  const decision = record.decisions.find((d: ConsentDecision) => d.categoryId === categoryId);\r\n  return decision?.status === 'accepted';\r\n}\r\n\r\nexport function mergeConsentDecisions(\r\n  existing: ConsentDecision[],\r\n  updates: ConsentDecision[]\r\n): ConsentDecision[] {\r\n  const merged = [...existing];\r\n  \r\n  updates.forEach(update => {\r\n    const existingIndex = merged.findIndex((d: ConsentDecision) => d.categoryId === update.categoryId);\r\n    if (existingIndex >= 0) {\r\n      merged[existingIndex] = update;\r\n    } else {\r\n      merged.push(update);\r\n    }\r\n  });\r\n  \r\n  return merged;\r\n}\r\n\r\nexport function hasExpiredConsent(record: ConsentRecord, expirationDays: number): boolean {\r\n  if (!record.lastUpdated) return true;\r\n  \r\n  const expirationDate = new Date(record.lastUpdated);\r\n  expirationDate.setDate(expirationDate.getDate() + expirationDays);\r\n  \r\n  return expirationDate <= new Date();\r\n}\r\n\r\nexport function sanitizeConsentRecord(record: ConsentRecord): ConsentRecord {\r\n  return {\r\n    userId: record.userId,\r\n    sessionId: record.sessionId,\r\n    decisions: record.decisions.map((d: ConsentDecision) => ({\r\n      categoryId: d.categoryId,\r\n      status: d.status,\r\n      timestamp: new Date(d.timestamp),\r\n      version: d.version\r\n    })),\r\n    lastUpdated: new Date(record.lastUpdated),\r\n    version: record.version,\r\n    ipAddress: record.ipAddress,\r\n    userAgent: record.userAgent\r\n  };\r\n}\r\n","import { ConsentTheme } from '../types';\r\n\r\nexport function applyConsentTheme(theme: ConsentTheme): void {\r\n  const root = document.documentElement;\r\n  \r\n  // Apply CSS custom properties\r\n  root.style.setProperty('--consent-primary-color', theme.primaryColor);\r\n  root.style.setProperty('--consent-secondary-color', theme.secondaryColor);\r\n  root.style.setProperty('--consent-background-color', theme.backgroundColor);\r\n  root.style.setProperty('--consent-text-color', theme.textColor);\r\n  root.style.setProperty('--consent-border-color', theme.borderColor);\r\n  root.style.setProperty('--consent-border-radius', theme.borderRadius);\r\n  root.style.setProperty('--consent-font-family', theme.fontFamily);\r\n  root.style.setProperty('--consent-font-size', theme.fontSize);\r\n  root.style.setProperty('--consent-button-style', theme.buttonStyle);\r\n  root.style.setProperty('--consent-shadow', theme.shadow ? '0 4px 6px rgba(0, 0, 0, 0.1)' : 'none');\r\n}\r\n\r\nexport function removeConsentTheme(): void {\r\n  const root = document.documentElement;\r\n  \r\n  const themeProperties = [\r\n    '--consent-primary-color',\r\n    '--consent-secondary-color',\r\n    '--consent-background-color',\r\n    '--consent-text-color',\r\n    '--consent-border-color',\r\n    '--consent-border-radius',\r\n    '--consent-font-family',\r\n    '--consent-font-size',\r\n    '--consent-button-style',\r\n    '--consent-shadow'\r\n  ];\r\n  \r\n  themeProperties.forEach(property => {\r\n    root.style.removeProperty(property);\r\n  });\r\n}\r\n\r\nexport function getDefaultTheme(): ConsentTheme {\r\n  return {\r\n    primaryColor: '#007bff',\r\n    secondaryColor: '#6c757d',\r\n    backgroundColor: '#ffffff',\r\n    textColor: '#212529',\r\n    borderColor: '#dee2e6',\r\n    borderRadius: '0.375rem',\r\n    fontFamily: 'system-ui, -apple-system, sans-serif',\r\n    fontSize: '14px',\r\n    buttonStyle: 'solid',\r\n    shadow: true\r\n  };\r\n}\r\n\r\nexport function getDarkTheme(): ConsentTheme {\r\n  return {\r\n    primaryColor: '#0d6efd',\r\n    secondaryColor: '#adb5bd',\r\n    backgroundColor: '#212529',\r\n    textColor: '#ffffff',\r\n    borderColor: '#495057',\r\n    borderRadius: '0.375rem',\r\n    fontFamily: 'system-ui, -apple-system, sans-serif',\r\n    fontSize: '14px',\r\n    buttonStyle: 'solid',\r\n    shadow: true\r\n  };\r\n}\r\n","import React, { createContext, useContext, useState, useEffect, useCallback, ReactNode } from 'react';\r\nimport { \r\n  ConsentContextType, \r\n  PrivacyConsentConfig, \r\n  ConsentRecord, \r\n  ConsentDecision,\r\n  ConsentStatus \r\n} from '../types';\r\nimport { useConsentStorage } from '../hooks/useConsentStorage';\r\nimport { generateSessionId, createConsentRecord } from '../utils/consentUtils';\r\nimport { applyConsentTheme } from '../utils/themeUtils';\r\n\r\nexport interface ConsentProviderProps {\r\n  children: ReactNode;\r\n  config: PrivacyConsentConfig;\r\n}\r\n\r\nconst ConsentContext = createContext<ConsentContextType | undefined>(undefined);\r\n\r\nexport function ConsentProvider({ children, config }: ConsentProviderProps) {\r\n  const [isVisible, setIsVisible] = useState(false);\r\n  const [isPreferencesVisible, setIsPreferencesVisible] = useState(false);\r\n  const [consentRecord, setConsentRecord] = useState<ConsentRecord | null>(null);\r\n  const [sessionId] = useState(() => generateSessionId());\r\n  \r\n  const { saveConsent, loadConsent, clearConsent } = useConsentStorage(config.settings.storageKey);  // Initialize consent record\r\n  useEffect(() => {\r\n    console.log('Initializing consent system with storage key:', config.settings.storageKey);\r\n    \r\n    const savedConsent = loadConsent();\r\n    console.log('Loaded consent from storage:', savedConsent ? 'found' : 'not found');\r\n    \r\n    if (savedConsent && savedConsent.version === config.settings.version) {\r\n      console.log('Consent version matches current version:', config.settings.version);\r\n      \r\n      // Check if consent is still valid\r\n      const expirationDate = new Date(savedConsent.lastUpdated);\r\n      expirationDate.setDate(expirationDate.getDate() + config.settings.expirationDays);\r\n      \r\n      if (expirationDate > new Date()) {\r\n        console.log('Consent is not expired, valid until:', expirationDate);\r\n        \r\n        // Ensure all configured categories exist in the saved consent\r\n        const allCategoriesPresent = config.settings.categories.every(category => \r\n          savedConsent.decisions.some(d => d.categoryId === category.id)\r\n        );\r\n        \r\n        if (allCategoriesPresent) {\r\n          // All categories found, use the saved consent\r\n          console.log('All categories present in saved consent, using it', savedConsent.decisions);\r\n          setConsentRecord(savedConsent);\r\n          return;\r\n        } else {\r\n          console.log('Some categories missing in saved consent, merging with defaults');\r\n          // Some categories are missing, merge with defaults\r\n          const mergedDecisions: ConsentDecision[] = [...savedConsent.decisions];\r\n          \r\n          // Add any missing categories with their default values\r\n          config.settings.categories.forEach(category => {\r\n            const exists = savedConsent.decisions.some(d => d.categoryId === category.id);\r\n            if (!exists) {\r\n              mergedDecisions.push({\r\n                categoryId: category.id,\r\n                status: category.required ? 'accepted' : (category.defaultValue ? 'accepted' : 'rejected') as ConsentStatus,\r\n                timestamp: new Date(),\r\n                version: config.settings.version\r\n              });\r\n            }\r\n          });\r\n          \r\n          // Create a new record with the merged decisions\r\n          const mergedRecord = createConsentRecord(\r\n            savedConsent.sessionId, \r\n            mergedDecisions, \r\n            config.settings.version\r\n          );\r\n          \r\n          console.log('Setting merged consent record:', mergedRecord);\r\n          setConsentRecord(mergedRecord);\r\n          saveConsent(mergedRecord);\r\n          return;\r\n        }\r\n      } else {\r\n        console.log('Consent is expired, expired on:', expirationDate);\r\n      }\r\n    } else {\r\n      console.log('No valid consent found or version mismatch');\r\n    }\r\n    \r\n    // Create a default consent record when none is found\r\n    // This ensures we always have a valid record with default values\r\n    const initialDecisions: ConsentDecision[] = config.settings.categories.map(category => ({\r\n      categoryId: category.id,\r\n      status: category.required ? 'accepted' : (category.defaultValue ? 'accepted' : 'rejected') as ConsentStatus,\r\n      timestamp: new Date(),\r\n      version: config.settings.version\r\n    }));\r\n    \r\n    const defaultRecord = createConsentRecord(sessionId, initialDecisions, config.settings.version);\r\n    console.log('Setting initial default consent record:', defaultRecord);\r\n    setConsentRecord(defaultRecord);\r\n    \r\n    // Show banner if no valid consent found\r\n    const showDelay = config.settings.autoShowDelay || 0;\r\n    setTimeout(() => {\r\n      if (!savedConsent || savedConsent.version !== config.settings.version) {\r\n        console.log('Showing consent banner');\r\n        setIsVisible(true);\r\n        config.onBannerShow?.();\r\n      }\r\n    }, showDelay);\r\n  }, [config, loadConsent]);\r\n\r\n  // Apply theme\r\n  useEffect(() => {\r\n    if (config.theme) {\r\n      applyConsentTheme(config.theme);\r\n    }\r\n  }, [config.theme]);\r\n\r\n  // Respect Do Not Track\r\n  useEffect(() => {\r\n    if (config.settings.respectDoNotTrack && navigator.doNotTrack === '1') {\r\n      const record = createConsentRecord(\r\n        sessionId,\r\n        config.settings.categories.map(cat => ({\r\n          categoryId: cat.id,\r\n          status: cat.required ? 'accepted' : 'rejected' as ConsentStatus,\r\n          timestamp: new Date(),\r\n          version: config.settings.version\r\n        })),\r\n        config.settings.version\r\n      );\r\n      setConsentRecord(record);\r\n      saveConsent(record);\r\n      setIsVisible(false);\r\n    }\r\n  }, [config.settings, sessionId, saveConsent]);\r\n\r\n  const showBanner = useCallback(() => {\r\n    setIsVisible(true);\r\n    config.onBannerShow?.();\r\n  }, [config]);\r\n\r\n  const hideBanner = useCallback(() => {\r\n    setIsVisible(false);\r\n    config.onBannerHide?.();\r\n  }, [config]);\r\n\r\n  const showPreferences = useCallback(() => {\r\n    setIsPreferencesVisible(true);\r\n  }, []);\r\n\r\n  const hidePreferences = useCallback(() => {\r\n    setIsPreferencesVisible(false);\r\n  }, []);\r\n  const updateConsentRecord = useCallback((decisions: ConsentDecision[]) => {\r\n    const record = createConsentRecord(sessionId, decisions, config.settings.version);\r\n    setConsentRecord(record);\r\n    saveConsent(record);\r\n    config.onConsentChange?.(record);\r\n    return record;\r\n  }, [sessionId, config, saveConsent]);\r\n\r\n  const acceptAll = useCallback(() => {\r\n    const decisions: ConsentDecision[] = config.settings.categories.map(category => ({\r\n      categoryId: category.id,\r\n      status: 'accepted' as ConsentStatus,\r\n      timestamp: new Date(),\r\n      version: config.settings.version\r\n    }));\r\n    \r\n    updateConsentRecord(decisions);\r\n    setIsVisible(false);\r\n    setIsPreferencesVisible(false);\r\n    config.onBannerHide?.();\r\n  }, [config, updateConsentRecord]);\r\n\r\n  const rejectAll = useCallback(() => {\r\n    const decisions: ConsentDecision[] = config.settings.categories.map(category => ({\r\n      categoryId: category.id,\r\n      status: category.required ? 'accepted' : 'rejected' as ConsentStatus,\r\n      timestamp: new Date(),\r\n      version: config.settings.version\r\n    }));\r\n    \r\n    updateConsentRecord(decisions);\r\n    setIsVisible(false);\r\n    setIsPreferencesVisible(false);\r\n    config.onBannerHide?.();\r\n  }, [config, updateConsentRecord]);  const updateConsent = useCallback((categoryId: string, accepted: boolean) => {\r\n    console.log(`Updating consent for category ${categoryId} to ${accepted ? 'accepted' : 'rejected'}`);\r\n    \r\n    // Create initial decisions from default values if no consent record exists\r\n    let currentDecisions;\r\n    \r\n    if (consentRecord && Array.isArray(consentRecord.decisions)) {\r\n      console.log('Using existing consent record decisions');\r\n      currentDecisions = [...consentRecord.decisions];\r\n    } else {\r\n      console.log('No existing consent record, creating default decisions');\r\n      currentDecisions = config.settings.categories.map(category => ({\r\n        categoryId: category.id,\r\n        status: category.defaultValue ? 'accepted' : 'rejected' as ConsentStatus,\r\n        timestamp: new Date(),\r\n        version: config.settings.version\r\n      }));\r\n    }\r\n    \r\n    // Filter out the category we're updating\r\n    const existingDecisions = currentDecisions.filter((d: ConsentDecision) => d.categoryId !== categoryId);\r\n    \r\n    // Create the new decision\r\n    const newDecision: ConsentDecision = {\r\n      categoryId,\r\n      status: accepted ? 'accepted' : 'rejected' as ConsentStatus,\r\n      timestamp: new Date(),\r\n      version: config.settings.version\r\n    };\r\n    \r\n    // Combine all decisions\r\n    const allDecisions = [...existingDecisions, newDecision];\r\n    console.log('Updated decisions:', \r\n      allDecisions.map((d: ConsentDecision) => `${d.categoryId}: ${d.status}`).join(', '));\r\n    \r\n    // Save the updated consent record using updateConsentRecord which handles storage\r\n    const updatedRecord = updateConsentRecord(allDecisions);\r\n    \r\n    return updatedRecord;\r\n  }, [consentRecord, config.settings.version, config.settings.categories, updateConsentRecord, saveConsent]);\r\n  const getConsent = useCallback((categoryId: string): ConsentStatus => {\r\n    if (!consentRecord) {\r\n      // If no consent record exists, use default values\r\n      const category = config.settings.categories.find(c => c.id === categoryId);\r\n      return category?.defaultValue ? 'accepted' : 'pending';\r\n    }\r\n    \r\n    const decision = consentRecord.decisions.find((d: ConsentDecision) => d.categoryId === categoryId);\r\n    if (decision) {\r\n      return decision.status;\r\n    }\r\n    \r\n    // If no decision found, use default value\r\n    const category = config.settings.categories.find(c => c.id === categoryId);\r\n    return category?.defaultValue ? 'accepted' : 'pending';\r\n  }, [consentRecord, config.settings.categories]);\r\n\r\n  const getAllConsent = useCallback(() => {\r\n    return consentRecord;\r\n  }, [consentRecord]);\r\n\r\n  const hasConsent = useCallback((categoryId: string): boolean => {\r\n    return getConsent(categoryId) === 'accepted';\r\n  }, [getConsent]);  const resetConsent = useCallback(() => {\r\n    console.log('Resetting consent to default state');\r\n    \r\n    // Clear consent from storage\r\n    clearConsent();\r\n    \r\n    // Create initial decisions based on defaults\r\n    const initialDecisions: ConsentDecision[] = config.settings.categories.map(category => ({\r\n      categoryId: category.id,\r\n      status: category.required ? 'accepted' : (category.defaultValue ? 'accepted' : 'rejected') as ConsentStatus,\r\n      timestamp: new Date(),\r\n      version: config.settings.version\r\n    }));\r\n    \r\n    console.log('Initial decisions after reset:', \r\n      initialDecisions.map(d => `${d.categoryId}: ${d.status}`).join(', '));\r\n    \r\n    // Create a new consent record but DON'T save it to storage yet\r\n    // We want the user to explicitly accept or reject cookies\r\n    // We'll reuse the existing sessionId to maintain consistency\r\n    const record = createConsentRecord(sessionId, initialDecisions, config.settings.version);\r\n    \r\n    // Update the state with new session ID and defaults\r\n    setConsentRecord(record);\r\n    \r\n    // Show the banner and hide preferences\r\n    setIsVisible(true);\r\n    setIsPreferencesVisible(false);\r\n    \r\n    // Trigger the callback\r\n    config.onBannerShow?.();\r\n    \r\n    console.log('Consent reset complete, banner shown, waiting for user action');\r\n  }, [clearConsent, config, config.settings.categories, config.settings.version]);\r\n\r\n  const contextValue: ConsentContextType = {\r\n    isVisible,\r\n    showBanner,\r\n    hideBanner,\r\n    showPreferences,\r\n    hidePreferences,\r\n    acceptAll,\r\n    rejectAll,\r\n    updateConsent,\r\n    getConsent,\r\n    getAllConsent,\r\n    hasConsent,\r\n    resetConsent,\r\n    isPreferencesVisible,\r\n    consentRecord,\r\n    config\r\n  };\r\n\r\n  return (\r\n    <ConsentContext.Provider value={contextValue}>\r\n      {children}\r\n    </ConsentContext.Provider>\r\n  );\r\n}\r\n\r\nexport function useConsentContext(): ConsentContextType {\r\n  const context = useContext(ConsentContext);\r\n  if (context === undefined) {\r\n    throw new Error('useConsentContext must be used within a ConsentProvider');\r\n  }\r\n  return context;\r\n}\r\n","import { useConsentContext } from '../components/ConsentProvider';\r\nimport { UseConsentReturn } from '../types';\r\n\r\n/**\r\n * Hook to access privacy consent functionality\r\n * Must be used within a ConsentProvider\r\n */\r\nexport function useConsent(): UseConsentReturn {\r\n  return useConsentContext();\r\n}\r\n","import React from 'react';\r\nimport { ConsentBannerProps } from '../types';\r\nimport { useConsent } from '../hooks/useConsent';\r\n\r\nexport function ConsentBanner({ \r\n  className = '', \r\n  style = {}, \r\n  onAcceptAll,\r\n  onRejectAll,\r\n  onManagePreferences,\r\n  children \r\n}: ConsentBannerProps) {\r\n  const { \r\n    isVisible, \r\n    acceptAll, \r\n    rejectAll, \r\n    showPreferences, \r\n    config \r\n  } = useConsent();\r\n\r\n  if (!isVisible) return null;\r\n\r\n  const handleAcceptAll = () => {\r\n    acceptAll();\r\n    onAcceptAll?.();\r\n  };\r\n\r\n  const handleRejectAll = () => {\r\n    rejectAll();\r\n    onRejectAll?.();\r\n  };\r\n\r\n  const handleManagePreferences = () => {\r\n    showPreferences();\r\n    onManagePreferences?.();\r\n  };\r\n\r\n  const bannerClasses = [\r\n    'consent-banner',\r\n    `consent-banner--${config.banner.position}`,\r\n    `consent-banner--${config.banner.layout}`,\r\n    config.banner.animation ? 'consent-banner--animated' : '',\r\n    className\r\n  ].filter(Boolean).join(' ');\r\n\r\n  return (\r\n    <>\r\n      {config.banner.backdrop && <div className=\"consent-backdrop\" />}\r\n      <div \r\n        className={bannerClasses}\r\n        style={style}\r\n        role=\"dialog\"\r\n        aria-labelledby=\"consent-title\"\r\n        aria-describedby=\"consent-description\"\r\n      >\r\n        {children || (\r\n          <div className=\"consent-banner__content\">\r\n            <div className=\"consent-banner__text\">\r\n              <h3 id=\"consent-title\" className=\"consent-banner__title\">\r\n                {config.texts.title}\r\n              </h3>\r\n              <p id=\"consent-description\" className=\"consent-banner__description\">\r\n                {config.texts.description}\r\n              </p>\r\n              {(config.texts.learnMoreUrl || config.texts.privacyPolicyUrl) && (\r\n                <div className=\"consent-banner__links\">\r\n                  {config.texts.learnMoreUrl && (\r\n                    <a \r\n                      href={config.texts.learnMoreUrl}\r\n                      target=\"_blank\"\r\n                      rel=\"noopener noreferrer\"\r\n                      className=\"consent-banner__link\"\r\n                    >\r\n                      {config.texts.learnMoreText}\r\n                    </a>\r\n                  )}\r\n                  {config.texts.privacyPolicyUrl && (\r\n                    <a \r\n                      href={config.texts.privacyPolicyUrl}\r\n                      target=\"_blank\"\r\n                      rel=\"noopener noreferrer\"\r\n                      className=\"consent-banner__link\"\r\n                    >\r\n                      Privacy Policy\r\n                    </a>\r\n                  )}\r\n                </div>\r\n              )}\r\n            </div>\r\n            \r\n            <div className=\"consent-banner__actions\">\r\n              {config.settings.showAcceptAll && (\r\n                <button\r\n                  onClick={handleAcceptAll}\r\n                  className=\"consent-button consent-button--primary\"\r\n                  type=\"button\"\r\n                >\r\n                  {config.texts.acceptAllText}\r\n                </button>\r\n              )}\r\n              \r\n              {config.settings.showDeclineAll && (\r\n                <button\r\n                  onClick={handleRejectAll}\r\n                  className=\"consent-button consent-button--secondary\"\r\n                  type=\"button\"\r\n                >\r\n                  {config.texts.rejectAllText}\r\n                </button>\r\n              )}\r\n              \r\n              {config.settings.showManagePreferences && (\r\n                <button\r\n                  onClick={handleManagePreferences}\r\n                  className=\"consent-button consent-button--ghost\"\r\n                  type=\"button\"\r\n                >\r\n                  {config.texts.managePreferencesText}\r\n                </button>\r\n              )}\r\n            </div>\r\n            \r\n            {config.banner.showCloseButton && (\r\n              <button\r\n                onClick={handleRejectAll}\r\n                className=\"consent-banner__close\"\r\n                aria-label={config.texts.closeText}\r\n                type=\"button\"\r\n              >\r\n                ×\r\n              </button>\r\n            )}\r\n            \r\n            {config.texts.poweredByText && (\r\n              <div className=\"consent-banner__powered-by\">\r\n                {config.texts.poweredByText}\r\n              </div>\r\n            )}\r\n          </div>\r\n        )}\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { ConsentToggleProps } from '../types';\r\n\r\nexport function ConsentToggle({ \r\n  checked, \r\n  onChange, \r\n  disabled = false, \r\n  size = 'md', \r\n  className = '', \r\n  label \r\n}: ConsentToggleProps) {\r\n  const toggleClasses = [\r\n    'consent-toggle',\r\n    `consent-toggle--${size}`,\r\n    checked ? 'consent-toggle--checked' : '',\r\n    disabled ? 'consent-toggle--disabled' : '',\r\n    className\r\n  ].filter(Boolean).join(' ');\r\n\r\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    if (!disabled) {\r\n      onChange(event.target.checked);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <label className={toggleClasses}>\r\n      <input\r\n        type=\"checkbox\"\r\n        checked={checked}\r\n        onChange={handleChange}\r\n        disabled={disabled}\r\n        className=\"consent-toggle__input\"\r\n        aria-label={label}\r\n      />\r\n      <span className=\"consent-toggle__slider\"></span>\r\n      {label && <span className=\"consent-toggle__label\">{label}</span>}\r\n    </label>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { ConsentCategoryProps } from '../types';\r\nimport { ConsentToggle } from './ConsentToggle';\r\n\r\nexport function ConsentCategory({ \r\n  category, \r\n  value, \r\n  onChange, \r\n  disabled = false, \r\n  className = '' \r\n}: ConsentCategoryProps) {\r\n  const categoryClasses = [\r\n    'consent-category',\r\n    disabled ? 'consent-category--disabled' : '',\r\n    category.required ? 'consent-category--required' : '',\r\n    className\r\n  ].filter(Boolean).join(' ');\r\n\r\n  return (\r\n    <div className={categoryClasses}>\r\n      <div className=\"consent-category__header\">\r\n        <h4 className=\"consent-category__name\">{category.name}</h4>\r\n        <ConsentToggle\r\n          checked={value}\r\n          onChange={onChange}\r\n          disabled={disabled}\r\n          size=\"md\"\r\n        />\r\n      </div>\r\n      <p className=\"consent-category__description\">{category.description}</p>\r\n      {category.required && (\r\n        <span className=\"consent-category__required-badge\">\r\n          Required\r\n        </span>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { ConsentModalProps } from '../types';\r\nimport { useConsent } from '../hooks/useConsent';\r\nimport { ConsentCategory } from './ConsentCategory';\r\n\r\nexport function ConsentModal({ \r\n  isOpen, \r\n  onClose, \r\n  className = '', \r\n  style = {},\r\n  showBackdrop = true\r\n}: ConsentModalProps) {  const { \r\n    config, \r\n    consentRecord, \r\n    updateConsent, \r\n    acceptAll, \r\n    rejectAll,\r\n    hidePreferences,\r\n    hideBanner,\r\n    getConsent\r\n  } = useConsent();\r\n\r\n  if (!isOpen) return null;\r\n  \r\n  const handleSavePreferences = () => {\r\n    // First hide the preferences modal\r\n    hidePreferences();\r\n    // Then hide the banner\r\n    hideBanner(); \r\n    // Finally close the modal\r\n    onClose();\r\n  };\r\n  const handleAcceptAll = () => {\r\n    // Accept all cookies and close the modal\r\n    acceptAll();\r\n    onClose();\r\n  };\r\n\r\n  const handleRejectAll = () => {\r\n    // Reject all non-required cookies and close the modal\r\n    rejectAll();\r\n    onClose();\r\n  };\r\n\r\n  const modalClasses = [\r\n    'consent-modal',\r\n    className\r\n  ].filter(Boolean).join(' ');\r\n\r\n  return (\r\n    <>\r\n      {showBackdrop && (\r\n        <div \r\n          className=\"consent-modal__backdrop\" \r\n          onClick={onClose}\r\n          role=\"presentation\"\r\n        />\r\n      )}\r\n      <div \r\n        className={modalClasses}\r\n        style={style}\r\n        role=\"dialog\"\r\n        aria-labelledby=\"consent-modal-title\"\r\n        aria-modal=\"true\"\r\n      >\r\n        <div className=\"consent-modal__content\">\r\n          <div className=\"consent-modal__header\">\r\n            <h2 id=\"consent-modal-title\" className=\"consent-modal__title\">\r\n              {config.texts.managePreferencesText}\r\n            </h2>\r\n            <button\r\n              onClick={onClose}\r\n              className=\"consent-modal__close\"\r\n              aria-label={config.texts.closeText}\r\n              type=\"button\"\r\n            >\r\n              ×\r\n            </button>\r\n          </div>\r\n          \r\n          <div className=\"consent-modal__body\">\r\n            <p className=\"consent-modal__description\">\r\n              {config.texts.description}\r\n            </p>\r\n              <div className=\"consent-modal__categories\">\r\n              {config.settings.categories.map((category) => {\r\n                const currentValue = getConsent(category.id) === 'accepted';\r\n                \r\n                return (\r\n                  <ConsentCategory\r\n                    key={category.id}\r\n                    category={category}\r\n                    value={currentValue}\r\n                    onChange={(accepted) => updateConsent(category.id, accepted)}\r\n                    disabled={category.required}\r\n                  />\r\n                );\r\n              })}\r\n            </div>\r\n            \r\n            {(config.texts.privacyPolicyUrl || config.texts.cookiePolicyUrl) && (\r\n              <div className=\"consent-modal__links\">\r\n                {config.texts.privacyPolicyUrl && (\r\n                  <a \r\n                    href={config.texts.privacyPolicyUrl}\r\n                    target=\"_blank\"\r\n                    rel=\"noopener noreferrer\"\r\n                    className=\"consent-modal__link\"\r\n                  >\r\n                    Privacy Policy\r\n                  </a>\r\n                )}\r\n                {config.texts.cookiePolicyUrl && (\r\n                  <a \r\n                    href={config.texts.cookiePolicyUrl}\r\n                    target=\"_blank\"\r\n                    rel=\"noopener noreferrer\"\r\n                    className=\"consent-modal__link\"\r\n                  >\r\n                    Cookie Policy\r\n                  </a>\r\n                )}\r\n              </div>\r\n            )}\r\n          </div>\r\n          \r\n          <div className=\"consent-modal__footer\">\r\n            <div className=\"consent-modal__actions\">\r\n              <button\r\n                onClick={handleSavePreferences}\r\n                className=\"consent-button consent-button--primary\"\r\n                type=\"button\"\r\n              >\r\n                {config.texts.savePreferencesText}\r\n              </button>\r\n              \r\n              {config.settings.showAcceptAll && (\r\n                <button\r\n                  onClick={handleAcceptAll}\r\n                  className=\"consent-button consent-button--secondary\"\r\n                  type=\"button\"\r\n                >\r\n                  {config.texts.acceptAllText}\r\n                </button>\r\n              )}\r\n              \r\n              {config.settings.showDeclineAll && (\r\n                <button\r\n                  onClick={handleRejectAll}\r\n                  className=\"consent-button consent-button--ghost\"\r\n                  type=\"button\"\r\n                >\r\n                  {config.texts.rejectAllText}\r\n                </button>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","// Main exports\r\nexport { ConsentProvider, useConsentContext } from './components/ConsentProvider';\r\nexport { ConsentBanner } from './components/ConsentBanner';\r\nexport { ConsentModal } from './components/ConsentModal';\r\nexport { ConsentCategory } from './components/ConsentCategory';\r\nexport { ConsentToggle } from './components/ConsentToggle';\r\n\r\n// Hooks\r\nexport { useConsent } from './hooks/useConsent';\r\nexport { useConsentStorage } from './hooks/useConsentStorage';\r\n\r\n// Utilities\r\nexport { \r\n  generateSessionId, \r\n  createConsentRecord, \r\n  isValidConsentRecord,\r\n  getConsentValue,\r\n  mergeConsentDecisions,\r\n  hasExpiredConsent,\r\n  sanitizeConsentRecord\r\n} from './utils/consentUtils';\r\n\r\nexport { \r\n  applyConsentTheme, \r\n  removeConsentTheme, \r\n  getDefaultTheme, \r\n  getDarkTheme \r\n} from './utils/themeUtils';\r\n\r\n// Types\r\nexport type {\r\n  ConsentType,\r\n  ConsentStatus,\r\n  BannerPosition,\r\n  BannerLayout,\r\n  ConsentCategory as ConsentCategoryType,\r\n  ConsentDecision,\r\n  ConsentRecord,\r\n  PrivacySettings,\r\n  BannerConfig,\r\n  ConsentTexts,\r\n  ConsentTheme,\r\n  PrivacyConsentConfig,\r\n  ConsentContextType,\r\n  ConsentBannerProps,\r\n  ConsentModalProps,\r\n  ConsentCategoryProps,\r\n  ConsentButtonProps,\r\n  ConsentToggleProps,\r\n  UseConsentReturn,\r\n  UseConsentStorageReturn,\r\n  UseConsentValidationReturn,\r\n  ConsentChangeHandler,\r\n  ConsentEventHandler,\r\n  ConsentErrorHandler\r\n} from './types';\r\n\r\n// Import types for internal use\r\nimport type {\r\n  PrivacySettings,\r\n  BannerConfig,\r\n  ConsentTexts,\r\n  PrivacyConsentConfig\r\n} from './types';\r\n\r\n// Default configurations\r\nexport const defaultPrivacySettings: PrivacySettings = {\r\n  categories: [\r\n    {\r\n      id: 'necessary',\r\n      name: 'Necessary',\r\n      description: 'Essential cookies required for basic website functionality.',\r\n      type: 'necessary',\r\n      required: true,\r\n      defaultValue: true\r\n    },\r\n    {\r\n      id: 'analytics',\r\n      name: 'Analytics',\r\n      description: 'Cookies that help us understand how visitors interact with our website.',\r\n      type: 'analytics',\r\n      required: false,\r\n      defaultValue: false\r\n    },\r\n    {\r\n      id: 'marketing',\r\n      name: 'Marketing',\r\n      description: 'Cookies used to deliver personalized advertisements.',\r\n      type: 'marketing',\r\n      required: false,\r\n      defaultValue: false\r\n    },\r\n    {\r\n      id: 'preferences',\r\n      name: 'Preferences',\r\n      description: 'Cookies that remember your preferences and settings.',\r\n      type: 'preferences',\r\n      required: false,\r\n      defaultValue: false\r\n    }\r\n  ],\r\n  version: '1.0.0',\r\n  expirationDays: 365,\r\n  storageKey: 'asafarim-privacy-consent',\r\n  showDeclineAll: true,\r\n  showAcceptAll: true,\r\n  showManagePreferences: true,\r\n  autoShowDelay: 1000,\r\n  respectDoNotTrack: true\r\n};\r\n\r\nexport const defaultBannerConfig: BannerConfig = {\r\n  position: 'bottom',\r\n  layout: 'banner',\r\n  showCloseButton: true,\r\n  showCompanyLogo: false,\r\n  blocking: false,\r\n  animation: true,\r\n  backdrop: false\r\n};\r\n\r\nexport const defaultConsentTexts: ConsentTexts = {\r\n  title: 'We value your privacy',\r\n  description: 'We use cookies and similar technologies to provide the best experience on our website. Some are necessary for functionality, while others help us understand usage and improve our services.',\r\n  acceptAllText: 'Accept All',\r\n  rejectAllText: 'Reject All',\r\n  managePreferencesText: 'Manage Preferences',\r\n  savePreferencesText: 'Save Preferences',\r\n  closeText: 'Close',\r\n  learnMoreText: 'Learn More',\r\n  poweredByText: 'Powered by @asafarim/react-privacy-consent'\r\n};\r\n\r\nexport const defaultPrivacyConsentConfig: PrivacyConsentConfig = {\r\n  settings: defaultPrivacySettings,\r\n  banner: defaultBannerConfig,\r\n  texts: defaultConsentTexts\r\n};\r\n"]}