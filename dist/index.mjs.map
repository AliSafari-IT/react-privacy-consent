{"version":3,"sources":["../src/hooks/useConsentStorage.ts","../src/utils/consentUtils.ts","../src/utils/themeUtils.ts","../src/components/ConsentProvider.tsx","../src/hooks/useConsent.ts","../src/components/ConsentBanner.tsx","../src/components/ConsentToggle.tsx","../src/components/ConsentCategory.tsx","../src/components/ConsentModal.tsx","../src/index.ts"],"names":["useConsentStorage","storageKey","isStorageAvailable","saveConsent","useCallback","record","serializedRecord","error","loadConsent","d","clearConsent","generateSessionId","createConsentRecord","sessionId","decisions","version","userId","isValidConsentRecord","currentVersion","getConsentValue","categoryId","mergeConsentDecisions","existing","updates","merged","update","existingIndex","hasExpiredConsent","expirationDays","expirationDate","sanitizeConsentRecord","applyConsentTheme","theme","root","removeConsentTheme","property","getDefaultTheme","getDarkTheme","ConsentContext","createContext","ConsentProvider","children","config","isVisible","setIsVisible","useState","isPreferencesVisible","setIsPreferencesVisible","consentRecord","setConsentRecord","useEffect","savedConsent","showDelay","cat","showBanner","hideBanner","showPreferences","hidePreferences","updateConsentRecord","acceptAll","category","rejectAll","updateConsent","accepted","existingDecisions","newDecision","getConsent","getAllConsent","hasConsent","resetConsent","contextValue","jsx","useConsentContext","context","useContext","useConsent","ConsentBanner","className","style","onAcceptAll","onRejectAll","onManagePreferences","handleAcceptAll","handleRejectAll","handleManagePreferences","bannerClasses","jsxs","Fragment","ConsentToggle","checked","onChange","disabled","size","label","toggleClasses","event","ConsentCategory","value","categoryClasses","ConsentModal","isOpen","onClose","showBackdrop","handleSavePreferences","modalClasses","currentValue","defaultPrivacySettings","defaultBannerConfig","defaultConsentTexts","defaultPrivacyConsentConfig"],"mappings":"8HAGO,SAASA,CAAAA,CAAkBC,CAA6C,CAAA,CAC7E,IAAMC,CAAAA,CAAqB,OAAO,OAAA,CAAY,GAExCC,CAAAA,CAAAA,CAAcC,WAAaC,CAAAA,CAAAA,EAA0B,CACzD,GAAKH,CAEL,CAAA,GAAI,CACF,IAAMI,CAAmB,CAAA,IAAA,CAAK,SAAUD,CAAAA,CAAM,CAC9C,CAAA,YAAA,CAAa,OAAQJ,CAAAA,CAAAA,CAAYK,CAAgB,EACnD,CAASC,MAAAA,CAAAA,CAAO,CACd,OAAA,CAAQ,IAAK,CAAA,yCAAA,CAA2CA,CAAK,EAC/D,CACF,CAAA,CAAG,CAACN,CAAAA,CAAYC,CAAkB,CAAC,CAE7BM,CAAAA,CAAAA,CAAcJ,WAAY,CAAA,IAA4B,CAC1D,GAAI,CAACF,CAAAA,CAAoB,OAAO,IAAA,CAEhC,GAAI,CACF,IAAMI,CAAAA,CAAmB,YAAa,CAAA,OAAA,CAAQL,CAAU,CAAA,CACxD,GAAI,CAACK,CAAkB,CAAA,OAAO,IAE9B,CAAA,IAAMD,CAAS,CAAA,IAAA,CAAK,KAAMC,CAAAA,CAAgB,CAG1C,CAAA,OAAI,CAACD,CAAAA,EAAU,CAACA,CAAAA,CAAO,SAAa,EAAA,CAACA,CAAO,CAAA,OAAA,CACnC,IAIF,CAAA,CACL,GAAGA,CAAAA,CACH,WAAa,CAAA,IAAI,IAAKA,CAAAA,CAAAA,CAAO,WAAW,CAAA,CACxC,SAAWA,CAAAA,CAAAA,CAAO,SAAU,CAAA,GAAA,CAAKI,CAAY,GAAA,CAC3C,GAAGA,CAAAA,CACH,SAAW,CAAA,IAAI,IAAKA,CAAAA,CAAAA,CAAE,SAAS,CACjC,CAAE,CAAA,CACJ,CACF,CAAA,MAASF,CAAO,CAAA,CACd,OAAQ,OAAA,CAAA,IAAA,CAAK,2CAA6CA,CAAAA,CAAK,CACxD,CAAA,IACT,CACF,CAAA,CAAG,CAACN,CAAAA,CAAYC,CAAkB,CAAC,CAE7BQ,CAAAA,CAAAA,CAAeN,WAAY,CAAA,IAAM,CACrC,GAAKF,CAEL,CAAA,GAAI,CACF,YAAA,CAAa,UAAWD,CAAAA,CAAU,EACpC,CAAA,MAASM,CAAO,CAAA,CACd,OAAQ,CAAA,IAAA,CAAK,4CAA8CA,CAAAA,CAAK,EAClE,CACF,CAAG,CAAA,CAACN,CAAYC,CAAAA,CAAkB,CAAC,CAAA,CAEnC,OAAO,CACL,WAAAC,CAAAA,CAAAA,CACA,WAAAK,CAAAA,CAAAA,CACA,YAAAE,CAAAA,CAAAA,CACA,kBAAAR,CAAAA,CACF,CACF,CC5DO,SAASS,CAAAA,EAA4B,CAC1C,OAAO,UAAa,CAAA,IAAA,CAAK,GAAI,EAAA,CAAI,GAAM,CAAA,IAAA,CAAK,MAAO,EAAA,CAAE,QAAS,CAAA,EAAE,CAAE,CAAA,SAAA,CAAU,CAAG,CAAA,EAAE,CACnF,CAEO,SAASC,CAAAA,CACdC,CACAC,CAAAA,CAAAA,CACAC,CACAC,CAAAA,CAAAA,CACe,CACf,OAAO,CACL,MAAA,CAAAA,CACA,CAAA,SAAA,CAAAH,CACA,CAAA,SAAA,CAAAC,CACA,CAAA,WAAA,CAAa,IAAI,IAAA,CACjB,OAAAC,CAAAA,CAAAA,CACA,SAAW,CAAA,OAAO,SAAc,CAAA,GAAA,CAAc,SAAU,CAAA,SAAA,CAAY,MACtE,CACF,CAEO,SAASE,CAAqBZ,CAAAA,CAAAA,CAAuBa,CAAiC,CAAA,CAC3F,OAAO,CAAA,EACLb,CACAA,EAAAA,CAAAA,CAAO,OAAYa,GAAAA,CAAAA,EACnBb,CAAO,CAAA,SAAA,EACP,KAAM,CAAA,OAAA,CAAQA,CAAO,CAAA,SAAS,CAC9BA,EAAAA,CAAAA,CAAO,WACPA,EAAAA,CAAAA,CAAO,SAEX,CAAA,CAEO,SAASc,CAAAA,CAAgBd,CAA8Be,CAAAA,CAAAA,CAA6B,CACzF,OAAKf,CAEYA,CAAAA,CAAAA,CAAO,SAAU,CAAA,IAAA,CAAMI,CAAuBA,EAAAA,CAAAA,CAAE,UAAeW,GAAAA,CAAU,CACzE,EAAA,MAAA,GAAW,UAHR,CAAA,KAItB,CAEO,SAASC,CACdC,CAAAA,CAAAA,CACAC,CACmB,CAAA,CACnB,IAAMC,CAAAA,CAAS,CAAC,GAAGF,CAAQ,CAAA,CAE3B,OAAAC,CAAAA,CAAQ,OAAQE,CAAAA,CAAAA,EAAU,CACxB,IAAMC,CAAgBF,CAAAA,CAAAA,CAAO,SAAWf,CAAAA,CAAAA,EAAuBA,CAAE,CAAA,UAAA,GAAegB,CAAO,CAAA,UAAU,CAC7FC,CAAAA,CAAAA,EAAiB,CACnBF,CAAAA,CAAAA,CAAOE,CAAa,CAAA,CAAID,CAExBD,CAAAA,CAAAA,CAAO,IAAKC,CAAAA,CAAM,EAEtB,CAAC,CAEMD,CAAAA,CACT,CAEO,SAASG,CAAkBtB,CAAAA,CAAAA,CAAuBuB,CAAiC,CAAA,CACxF,GAAI,CAACvB,CAAO,CAAA,WAAA,CAAa,OAAO,KAAA,CAEhC,IAAMwB,CAAAA,CAAiB,IAAI,IAAA,CAAKxB,CAAO,CAAA,WAAW,CAClD,CAAA,OAAAwB,CAAe,CAAA,OAAA,CAAQA,CAAe,CAAA,OAAA,EAAYD,CAAAA,CAAc,CAEzDC,CAAAA,CAAAA,EAAkB,IAAI,IAC/B,CAEO,SAASC,EAAsBzB,CAAAA,CAAAA,CAAsC,CAC1E,OAAO,CACL,MAAA,CAAQA,CAAO,CAAA,MAAA,CACf,SAAWA,CAAAA,CAAAA,CAAO,SAClB,CAAA,SAAA,CAAWA,CAAO,CAAA,SAAA,CAAU,GAAKI,CAAAA,CAAAA,GAAwB,CACvD,UAAA,CAAYA,CAAE,CAAA,UAAA,CACd,MAAQA,CAAAA,CAAAA,CAAE,MACV,CAAA,SAAA,CAAW,IAAI,IAAA,CAAKA,CAAE,CAAA,SAAS,CAC/B,CAAA,OAAA,CAASA,CAAE,CAAA,OACb,CAAE,CAAA,CAAA,CACF,WAAa,CAAA,IAAI,IAAKJ,CAAAA,CAAAA,CAAO,WAAW,CAAA,CACxC,OAASA,CAAAA,CAAAA,CAAO,OAChB,CAAA,SAAA,CAAWA,CAAO,CAAA,SAAA,CAClB,SAAWA,CAAAA,CAAAA,CAAO,SACpB,CACF,CChFO,SAAS0B,CAAkBC,CAAAA,CAAAA,CAA2B,CAC3D,IAAMC,CAAO,CAAA,QAAA,CAAS,eAGtBA,CAAAA,CAAAA,CAAK,KAAM,CAAA,WAAA,CAAY,yBAA2BD,CAAAA,CAAAA,CAAM,YAAY,CAAA,CACpEC,CAAK,CAAA,KAAA,CAAM,WAAY,CAAA,2BAAA,CAA6BD,CAAM,CAAA,cAAc,CACxEC,CAAAA,CAAAA,CAAK,KAAM,CAAA,WAAA,CAAY,4BAA8BD,CAAAA,CAAAA,CAAM,eAAe,CAAA,CAC1EC,CAAK,CAAA,KAAA,CAAM,WAAY,CAAA,sBAAA,CAAwBD,CAAM,CAAA,SAAS,CAC9DC,CAAAA,CAAAA,CAAK,KAAM,CAAA,WAAA,CAAY,wBAA0BD,CAAAA,CAAAA,CAAM,WAAW,CAAA,CAClEC,CAAK,CAAA,KAAA,CAAM,WAAY,CAAA,yBAAA,CAA2BD,CAAM,CAAA,YAAY,CACpEC,CAAAA,CAAAA,CAAK,KAAM,CAAA,WAAA,CAAY,uBAAyBD,CAAAA,CAAAA,CAAM,UAAU,CAAA,CAChEC,CAAK,CAAA,KAAA,CAAM,WAAY,CAAA,qBAAA,CAAuBD,CAAM,CAAA,QAAQ,CAC5DC,CAAAA,CAAAA,CAAK,KAAM,CAAA,WAAA,CAAY,wBAA0BD,CAAAA,CAAAA,CAAM,WAAW,CAAA,CAClEC,CAAK,CAAA,KAAA,CAAM,WAAY,CAAA,kBAAA,CAAoBD,CAAM,CAAA,MAAA,CAAS,8BAAiC,CAAA,MAAM,EACnG,CAEO,SAASE,EAAAA,EAA2B,CACzC,IAAMD,CAAO,CAAA,QAAA,CAAS,eAEE,CAAA,CACtB,yBACA,CAAA,2BAAA,CACA,4BACA,CAAA,sBAAA,CACA,wBACA,CAAA,yBAAA,CACA,uBACA,CAAA,qBAAA,CACA,wBACA,CAAA,kBACF,CAEgB,CAAA,OAAA,CAAQE,CAAY,EAAA,CAClCF,CAAK,CAAA,KAAA,CAAM,cAAeE,CAAAA,CAAQ,EACpC,CAAC,EACH,CAEO,SAASC,EAAAA,EAAgC,CAC9C,OAAO,CACL,YAAA,CAAc,SACd,CAAA,cAAA,CAAgB,SAChB,CAAA,eAAA,CAAiB,SACjB,CAAA,SAAA,CAAW,SACX,CAAA,WAAA,CAAa,SACb,CAAA,YAAA,CAAc,UACd,CAAA,UAAA,CAAY,sCACZ,CAAA,QAAA,CAAU,MACV,CAAA,WAAA,CAAa,OACb,CAAA,MAAA,CAAQ,IACV,CACF,CAEO,SAASC,EAA6B,EAAA,CAC3C,OAAO,CACL,YAAc,CAAA,SAAA,CACd,cAAgB,CAAA,SAAA,CAChB,eAAiB,CAAA,SAAA,CACjB,SAAW,CAAA,SAAA,CACX,WAAa,CAAA,SAAA,CACb,YAAc,CAAA,UAAA,CACd,UAAY,CAAA,sCAAA,CACZ,QAAU,CAAA,MAAA,CACV,WAAa,CAAA,OAAA,CACb,MAAQ,CAAA,IACV,CACF,CClDA,IAAMC,CAAiBC,CAAAA,aAAAA,CAA8C,MAAS,CAAA,CAEvE,SAASC,EAAAA,CAAgB,CAAE,QAAA,CAAAC,CAAU,CAAA,MAAA,CAAAC,CAAO,CAAA,CAAyB,CAC1E,GAAM,CAACC,CAAAA,CAAWC,CAAY,CAAA,CAAIC,QAAS,CAAA,KAAK,CAC1C,CAAA,CAACC,CAAsBC,CAAAA,CAAuB,CAAIF,CAAAA,QAAAA,CAAS,KAAK,CAAA,CAChE,CAACG,CAAAA,CAAeC,CAAgB,CAAA,CAAIJ,QAA+B,CAAA,IAAI,CACvE,CAAA,CAAChC,CAAS,CAAA,CAAIgC,QAAS,CAAA,IAAMlC,CAAkB,EAAC,CAEhD,CAAA,CAAE,WAAAR,CAAAA,CAAAA,CAAa,WAAAK,CAAAA,CAAAA,CAAa,YAAAE,CAAAA,CAAa,CAAIV,CAAAA,CAAAA,CAAkB0C,CAAO,CAAA,QAAA,CAAS,UAAU,CAAA,CAG/FQ,SAAU,CAAA,IAAM,CACd,IAAMC,CAAe3C,CAAAA,CAAAA,EAErB,CAAA,GAAI2C,CAAgBA,EAAAA,CAAAA,CAAa,OAAYT,GAAAA,CAAAA,CAAO,QAAS,CAAA,OAAA,CAAS,CAEpE,IAAMb,CAAiB,CAAA,IAAI,IAAKsB,CAAAA,CAAAA,CAAa,WAAW,CAAA,CAGxD,GAFAtB,CAAAA,CAAe,OAAQA,CAAAA,CAAAA,CAAe,OAAQ,EAAA,CAAIa,CAAO,CAAA,QAAA,CAAS,cAAc,CAAA,CAE5Eb,CAAiB,CAAA,IAAI,IAAQ,CAAA,CAC/BoB,CAAiBE,CAAAA,CAAY,CAC7B,CAAA,MACF,CACF,CAGA,IAAMC,CAAAA,CAAYV,CAAO,CAAA,QAAA,CAAS,aAAiB,EAAA,CAAA,CACnD,UAAW,CAAA,IAAM,CACX,CAAA,CAACS,CAAgBA,EAAAA,CAAAA,CAAa,OAAYT,GAAAA,CAAAA,CAAO,QAAS,CAAA,OAAA,IAC5DE,CAAa,CAAA,IAAI,CACjBF,CAAAA,CAAAA,CAAO,YAAe,IAAA,EAE1B,CAAGU,CAAAA,CAAS,EACd,CAAA,CAAG,CAACV,CAAAA,CAAQlC,CAAW,CAAC,CAGxB0C,CAAAA,SAAAA,CAAU,IAAM,CACVR,CAAO,CAAA,KAAA,EACTX,CAAkBW,CAAAA,CAAAA,CAAO,KAAK,EAElC,CAAG,CAAA,CAACA,CAAO,CAAA,KAAK,CAAC,CAAA,CAGjBQ,SAAU,CAAA,IAAM,CACd,GAAIR,CAAO,CAAA,QAAA,CAAS,iBAAqB,EAAA,SAAA,CAAU,UAAe,GAAA,GAAA,CAAK,CACrE,IAAMrC,CAASO,CAAAA,CAAAA,CACbC,CACA6B,CAAAA,CAAAA,CAAO,QAAS,CAAA,UAAA,CAAW,GAAIW,CAAAA,CAAAA,GAAQ,CACrC,UAAA,CAAYA,CAAI,CAAA,EAAA,CAChB,MAAQA,CAAAA,CAAAA,CAAI,QAAW,CAAA,UAAA,CAAa,UACpC,CAAA,SAAA,CAAW,IAAI,IAAA,CACf,OAASX,CAAAA,CAAAA,CAAO,QAAS,CAAA,OAC3B,CAAE,CAAA,CAAA,CACFA,CAAO,CAAA,QAAA,CAAS,OAClB,CAAA,CACAO,CAAiB5C,CAAAA,CAAM,CACvBF,CAAAA,CAAAA,CAAYE,CAAM,CAAA,CAClBuC,CAAa,CAAA,KAAK,EACpB,CACF,CAAG,CAAA,CAACF,CAAO,CAAA,QAAA,CAAU7B,CAAWV,CAAAA,CAAW,CAAC,CAAA,CAE5C,IAAMmD,CAAAA,CAAalD,WAAY,CAAA,IAAM,CACnCwC,CAAAA,CAAa,IAAI,CAAA,CACjBF,CAAO,CAAA,YAAA,KACT,CAAA,CAAG,CAACA,CAAM,CAAC,CAAA,CAELa,CAAanD,CAAAA,WAAAA,CAAY,IAAM,CACnCwC,CAAa,CAAA,KAAK,CAClBF,CAAAA,CAAAA,CAAO,YAAe,KACxB,CAAG,CAAA,CAACA,CAAM,CAAC,CAELc,CAAAA,CAAAA,CAAkBpD,WAAY,CAAA,IAAM,CACxC2C,CAAAA,CAAwB,IAAI,EAC9B,CAAG,CAAA,EAAE,CAAA,CAECU,CAAkBrD,CAAAA,WAAAA,CAAY,IAAM,CACxC2C,CAAwB,CAAA,KAAK,EAC/B,CAAA,CAAG,EAAE,CAECW,CAAAA,CAAAA,CAAsBtD,WAAaU,CAAAA,CAAAA,EAAiC,CACxE,IAAMT,CAASO,CAAAA,CAAAA,CAAoBC,CAAWC,CAAAA,CAAAA,CAAW4B,CAAO,CAAA,QAAA,CAAS,OAAO,CAAA,CAChF,OAAAO,CAAAA,CAAiB5C,CAAM,CAAA,CACvBF,CAAYE,CAAAA,CAAM,CAClBqC,CAAAA,CAAAA,CAAO,eAAkBrC,GAAAA,CAAM,CACxBA,CAAAA,CACT,CAAG,CAAA,CAACQ,CAAW6B,CAAAA,CAAAA,CAAQvC,CAAW,CAAC,CAE7BwD,CAAAA,CAAAA,CAAYvD,WAAY,CAAA,IAAM,CAClC,IAAMU,CAA+B4B,CAAAA,CAAAA,CAAO,QAAS,CAAA,UAAA,CAAW,GAAIkB,CAAAA,CAAAA,GAAa,CAC/E,UAAA,CAAYA,CAAS,CAAA,EAAA,CACrB,MAAQ,CAAA,UAAA,CACR,SAAW,CAAA,IAAI,IACf,CAAA,OAAA,CAASlB,CAAO,CAAA,QAAA,CAAS,OAC3B,CAAA,CAAE,CAEFgB,CAAAA,CAAAA,CAAoB5C,CAAS,CAAA,CAC7B8B,CAAa,CAAA,KAAK,CAClBG,CAAAA,CAAAA,CAAwB,KAAK,CAAA,CAC7BL,CAAO,CAAA,YAAA,KACT,CAAA,CAAG,CAACA,CAAAA,CAAQgB,CAAmB,CAAC,CAE1BG,CAAAA,CAAAA,CAAYzD,WAAY,CAAA,IAAM,CAClC,IAAMU,CAA+B4B,CAAAA,CAAAA,CAAO,QAAS,CAAA,UAAA,CAAW,GAAIkB,CAAAA,CAAAA,GAAa,CAC/E,UAAA,CAAYA,CAAS,CAAA,EAAA,CACrB,MAAQA,CAAAA,CAAAA,CAAS,QAAW,CAAA,UAAA,CAAa,UACzC,CAAA,SAAA,CAAW,IAAI,IAAA,CACf,OAASlB,CAAAA,CAAAA,CAAO,QAAS,CAAA,OAC3B,CAAE,CAAA,CAAA,CAEFgB,CAAoB5C,CAAAA,CAAS,CAC7B8B,CAAAA,CAAAA,CAAa,KAAK,CAAA,CAClBG,CAAwB,CAAA,KAAK,CAC7BL,CAAAA,CAAAA,CAAO,YAAe,KACxB,CAAG,CAAA,CAACA,CAAQgB,CAAAA,CAAmB,CAAC,CAAA,CAE1BI,CAAgB1D,CAAAA,WAAAA,CAAY,CAACgB,CAAAA,CAAoB2C,CAAsB,GAAA,CAC3E,GAAI,CAACf,CAAe,CAAA,OAEpB,IAAMgB,CAAAA,CAAoBhB,CAAc,CAAA,SAAA,CAAU,MAAQvC,CAAAA,CAAAA,EAAuBA,CAAE,CAAA,UAAA,GAAeW,CAAU,CAAA,CACtG6C,CAA+B,CAAA,CACnC,UAAA7C,CAAAA,CAAAA,CACA,MAAQ2C,CAAAA,CAAAA,CAAW,UAAa,CAAA,UAAA,CAChC,SAAW,CAAA,IAAI,IACf,CAAA,OAAA,CAASrB,CAAO,CAAA,QAAA,CAAS,OAC3B,CAAA,CAEAgB,CAAoB,CAAA,CAAC,GAAGM,CAAAA,CAAmBC,CAAW,CAAC,EACzD,CAAA,CAAG,CAACjB,CAAAA,CAAeN,CAAO,CAAA,QAAA,CAAS,OAASgB,CAAAA,CAAmB,CAAC,CAAA,CAE1DQ,CAAa9D,CAAAA,WAAAA,CAAagB,CACzB4B,EAAAA,CAAAA,EAEYA,CAAc,CAAA,SAAA,CAAU,IAAMvC,CAAAA,CAAAA,EAAuBA,CAAE,CAAA,UAAA,GAAeW,CAAU,CAAA,EAChF,MAAU,EAAA,SAAA,CAC1B,CAAC4B,CAAa,CAAC,CAAA,CAEZmB,CAAgB/D,CAAAA,WAAAA,CAAY,IACzB4C,CAAAA,CACN,CAACA,CAAa,CAAC,CAAA,CAEZoB,CAAahE,CAAAA,WAAAA,CAAagB,CACvB8C,EAAAA,CAAAA,CAAW9C,CAAU,CAAA,GAAM,UACjC,CAAA,CAAC8C,CAAU,CAAC,CAETG,CAAAA,CAAAA,CAAejE,WAAY,CAAA,IAAM,CACrCM,CAAAA,EACAuC,CAAAA,CAAAA,CAAiB,IAAI,CAAA,CACrBL,CAAa,CAAA,IAAI,CACjBG,CAAAA,CAAAA,CAAwB,KAAK,CAAA,CAC7BL,CAAO,CAAA,YAAA,KACT,CAAA,CAAG,CAAChC,CAAAA,CAAcgC,CAAM,CAAC,CAEnB4B,CAAAA,CAAAA,CAAmC,CACvC,SAAA,CAAA3B,CACA,CAAA,UAAA,CAAAW,CACA,CAAA,UAAA,CAAAC,CACA,CAAA,eAAA,CAAAC,CACA,CAAA,eAAA,CAAAC,CACA,CAAA,SAAA,CAAAE,CACA,CAAA,SAAA,CAAAE,CACA,CAAA,aAAA,CAAAC,CACA,CAAA,UAAA,CAAAI,CACA,CAAA,aAAA,CAAAC,CACA,CAAA,UAAA,CAAAC,CACA,CAAA,YAAA,CAAAC,CACA,CAAA,oBAAA,CAAAvB,CACA,CAAA,aAAA,CAAAE,CACA,CAAA,MAAA,CAAAN,CACF,CAAA,CAEA,OACE6B,GAAAA,CAACjC,CAAe,CAAA,QAAA,CAAf,CAAwB,KAAA,CAAOgC,CAC7B,CAAA,QAAA,CAAA7B,CACH,CAAA,CAEJ,CAEO,SAAS+B,CAAwC,EAAA,CACtD,IAAMC,CAAAA,CAAUC,UAAWpC,CAAAA,CAAc,CACzC,CAAA,GAAImC,CAAY,GAAA,MAAA,CACd,MAAM,IAAI,KAAM,CAAA,yDAAyD,CAE3E,CAAA,OAAOA,CACT,CCjMO,SAASE,CAAAA,EAA+B,CAC7C,OAAOH,CAAkB,EAC3B,CCLO,SAASI,EAAAA,CAAc,CAC5B,SAAA,CAAAC,CAAY,CAAA,EAAA,CACZ,KAAAC,CAAAA,CAAAA,CAAQ,EAAC,CACT,WAAAC,CAAAA,CAAAA,CACA,WAAAC,CAAAA,CAAAA,CACA,mBAAAC,CAAAA,CAAAA,CACA,QAAAxC,CAAAA,CACF,CAAuB,CAAA,CACrB,GAAM,CACJ,SAAAE,CAAAA,CAAAA,CACA,SAAAgB,CAAAA,CAAAA,CACA,SAAAE,CAAAA,CAAAA,CACA,eAAAL,CAAAA,CAAAA,CACA,MAAAd,CAAAA,CACF,CAAIiC,CAAAA,CAAAA,EAEJ,CAAA,GAAI,CAAChC,CAAAA,CAAW,OAAO,IAAA,CAEvB,IAAMuC,CAAAA,CAAkB,IAAM,CAC5BvB,CAAU,EAAA,CACVoB,CAAc,KAChB,CAEMI,CAAAA,CAAAA,CAAkB,IAAM,CAC5BtB,CAAU,EAAA,CACVmB,CAAc,KAChB,CAEMI,CAAAA,CAAAA,CAA0B,IAAM,CACpC5B,CAAgB,EAAA,CAChByB,CAAsB,KACxB,CAEMI,CAAAA,CAAAA,CAAgB,CACpB,gBAAA,CACA,CAAmB3C,gBAAAA,EAAAA,CAAAA,CAAO,MAAO,CAAA,QAAQ,CACzC,CAAA,CAAA,CAAA,gBAAA,EAAmBA,CAAO,CAAA,MAAA,CAAO,MAAM,CAAA,CAAA,CACvCA,CAAO,CAAA,MAAA,CAAO,SAAY,CAAA,0BAAA,CAA6B,EACvDmC,CAAAA,CACF,CAAE,CAAA,MAAA,CAAO,OAAO,CAAA,CAAE,IAAK,CAAA,GAAG,CAE1B,CAAA,OACES,IAAAC,CAAAA,QAAAA,CAAA,CACG,QAAA,CAAA,CAAA7C,CAAO,CAAA,MAAA,CAAO,QAAY6B,EAAAA,GAAAA,CAAC,KAAI,CAAA,CAAA,SAAA,CAAU,kBAAmB,CAAA,CAAA,CAC7DA,GAAC,CAAA,KAAA,CAAA,CACC,SAAWc,CAAAA,CAAAA,CACX,KAAOP,CAAAA,CAAAA,CACP,IAAK,CAAA,QAAA,CACL,iBAAgB,CAAA,eAAA,CAChB,kBAAiB,CAAA,qBAAA,CAEhB,QAAArC,CAAAA,CAAAA,EACC6C,IAAC,CAAA,KAAA,CAAA,CAAI,SAAU,CAAA,yBAAA,CACb,QAAAA,CAAAA,CAAAA,IAAAA,CAAC,KAAI,CAAA,CAAA,SAAA,CAAU,sBACb,CAAA,QAAA,CAAA,CAAAf,GAAC,CAAA,IAAA,CAAA,CAAG,EAAG,CAAA,eAAA,CAAgB,SAAU,CAAA,uBAAA,CAC9B,QAAA7B,CAAAA,CAAAA,CAAO,KAAM,CAAA,KAAA,CAChB,CACA6B,CAAAA,GAAAA,CAAC,GAAE,CAAA,CAAA,EAAA,CAAG,qBAAsB,CAAA,SAAA,CAAU,6BACnC,CAAA,QAAA,CAAA7B,CAAO,CAAA,KAAA,CAAM,WAChB,CAAA,CAAA,CAAA,CACEA,CAAO,CAAA,KAAA,CAAM,YAAgBA,EAAAA,CAAAA,CAAO,KAAM,CAAA,gBAAA,GAC1C4C,IAAC,CAAA,KAAA,CAAA,CAAI,SAAU,CAAA,uBAAA,CACZ,QAAA5C,CAAAA,CAAAA,CAAAA,CAAO,KAAM,CAAA,YAAA,EACZ6B,GAAC,CAAA,GAAA,CAAA,CACC,IAAM7B,CAAAA,CAAAA,CAAO,KAAM,CAAA,YAAA,CACnB,MAAO,CAAA,QAAA,CACP,GAAI,CAAA,qBAAA,CACJ,SAAU,CAAA,sBAAA,CAET,QAAAA,CAAAA,CAAAA,CAAO,KAAM,CAAA,aAAA,CAChB,CAEDA,CAAAA,CAAAA,CAAO,KAAM,CAAA,gBAAA,EACZ6B,GAAC,CAAA,GAAA,CAAA,CACC,IAAM7B,CAAAA,CAAAA,CAAO,KAAM,CAAA,gBAAA,CACnB,MAAO,CAAA,QAAA,CACP,GAAI,CAAA,qBAAA,CACJ,SAAU,CAAA,sBAAA,CACX,QAED,CAAA,gBAAA,CAAA,CAAA,CAAA,CAEJ,CAEJ,CAAA,CAAA,CAAA,CAEA4C,IAAC,CAAA,KAAA,CAAA,CAAI,SAAU,CAAA,yBAAA,CACZ,QAAA5C,CAAAA,CAAAA,CAAAA,CAAO,QAAS,CAAA,aAAA,EACf6B,GAAC,CAAA,QAAA,CAAA,CACC,OAASW,CAAAA,CAAAA,CACT,SAAU,CAAA,wCAAA,CACV,IAAK,CAAA,QAAA,CAEJ,QAAAxC,CAAAA,CAAAA,CAAO,KAAM,CAAA,aAAA,CAChB,CAGDA,CAAAA,CAAAA,CAAO,QAAS,CAAA,cAAA,EACf6B,GAAC,CAAA,QAAA,CAAA,CACC,OAASY,CAAAA,CAAAA,CACT,SAAU,CAAA,0CAAA,CACV,IAAK,CAAA,QAAA,CAEJ,QAAAzC,CAAAA,CAAAA,CAAO,KAAM,CAAA,aAAA,CAChB,CAGDA,CAAAA,CAAAA,CAAO,QAAS,CAAA,qBAAA,EACf6B,GAAC,CAAA,QAAA,CAAA,CACC,OAASa,CAAAA,CAAAA,CACT,SAAU,CAAA,sCAAA,CACV,IAAK,CAAA,QAAA,CAEJ,QAAA1C,CAAAA,CAAAA,CAAO,KAAM,CAAA,qBAAA,CAChB,CAEJ,CAAA,CAAA,CAAA,CAECA,CAAO,CAAA,MAAA,CAAO,eACb6B,EAAAA,GAAAA,CAAC,QACC,CAAA,CAAA,OAAA,CAASY,CACT,CAAA,SAAA,CAAU,uBACV,CAAA,YAAA,CAAYzC,CAAO,CAAA,KAAA,CAAM,SACzB,CAAA,IAAA,CAAK,QACN,CAAA,QAAA,CAAA,MAAA,CAED,CAGDA,CAAAA,CAAAA,CAAO,KAAM,CAAA,aAAA,EACZ6B,GAAC,CAAA,KAAA,CAAA,CAAI,SAAU,CAAA,4BAAA,CACZ,QAAA7B,CAAAA,CAAAA,CAAO,KAAM,CAAA,aAAA,CAChB,CAEJ,CAAA,CAAA,CAAA,CAEJ,CACF,CAAA,CAAA,CAEJ,CC5IO,SAAS8C,CAAc,CAAA,CAC5B,OAAAC,CAAAA,CAAAA,CACA,QAAAC,CAAAA,CAAAA,CACA,QAAAC,CAAAA,CAAAA,CAAW,KACX,CAAA,IAAA,CAAAC,CAAO,CAAA,IAAA,CACP,SAAAf,CAAAA,CAAAA,CAAY,EACZ,CAAA,KAAA,CAAAgB,CACF,CAAA,CAAuB,CACrB,IAAMC,CAAgB,CAAA,CACpB,gBACA,CAAA,CAAA,gBAAA,EAAmBF,CAAI,CAAA,CAAA,CACvBH,CAAU,CAAA,yBAAA,CAA4B,EACtCE,CAAAA,CAAAA,CAAW,0BAA6B,CAAA,EAAA,CACxCd,CACF,CAAA,CAAE,MAAO,CAAA,OAAO,CAAE,CAAA,IAAA,CAAK,GAAG,CAAA,CAQ1B,OACES,IAAAA,CAAC,OAAM,CAAA,CAAA,SAAA,CAAWQ,CAChB,CAAA,QAAA,CAAA,CAAAvB,GAAC,CAAA,OAAA,CAAA,CACC,IAAK,CAAA,UAAA,CACL,OAASkB,CAAAA,CAAAA,CACT,QAXgBM,CAAAA,CAAAA,EAA+C,CAC9DJ,CAAAA,EACHD,CAASK,CAAAA,CAAAA,CAAM,MAAO,CAAA,OAAO,EAEjC,CAAA,CAQM,QAAUJ,CAAAA,CAAAA,CACV,SAAU,CAAA,uBAAA,CACV,YAAYE,CAAAA,CAAAA,CACd,CACAtB,CAAAA,GAAAA,CAAC,MAAK,CAAA,CAAA,SAAA,CAAU,wBAAyB,CAAA,CAAA,CACxCsB,CAAStB,EAAAA,GAAAA,CAAC,MAAK,CAAA,CAAA,SAAA,CAAU,uBAAyB,CAAA,QAAA,CAAAsB,CAAM,CAAA,CAAA,CAAA,CAC3D,CAEJ,CCnCO,SAASG,CAAAA,CAAgB,CAC9B,QAAA,CAAApC,CACA,CAAA,KAAA,CAAAqC,CACA,CAAA,QAAA,CAAAP,CACA,CAAA,QAAA,CAAAC,CAAW,CAAA,KAAA,CACX,SAAAd,CAAAA,CAAAA,CAAY,EACd,CAAA,CAAyB,CACvB,IAAMqB,CAAkB,CAAA,CACtB,kBACAP,CAAAA,CAAAA,CAAW,4BAA+B,CAAA,EAAA,CAC1C/B,CAAS,CAAA,QAAA,CAAW,4BAA+B,CAAA,EAAA,CACnDiB,CACF,CAAA,CAAE,MAAO,CAAA,OAAO,CAAE,CAAA,IAAA,CAAK,GAAG,CAAA,CAE1B,OACES,IAAAA,CAAC,KAAI,CAAA,CAAA,SAAA,CAAWY,CACd,CAAA,QAAA,CAAA,CAAAZ,IAAC,CAAA,KAAA,CAAA,CAAI,SAAU,CAAA,0BAAA,CACb,QAAAf,CAAAA,CAAAA,GAAAA,CAAC,IAAG,CAAA,CAAA,SAAA,CAAU,wBAA0B,CAAA,QAAA,CAAAX,CAAS,CAAA,IAAA,CAAK,CACtDW,CAAAA,GAAAA,CAACiB,CAAA,CAAA,CACC,OAASS,CAAAA,CAAAA,CACT,QAAUP,CAAAA,CAAAA,CACV,QAAUC,CAAAA,CAAAA,CACV,IAAK,CAAA,IAAA,CACP,CACF,CAAA,CAAA,CAAA,CACApB,GAAC,CAAA,GAAA,CAAA,CAAE,SAAU,CAAA,+BAAA,CAAiC,QAAAX,CAAAA,CAAAA,CAAS,WAAY,CAAA,CAAA,CAClEA,CAAS,CAAA,QAAA,EACRW,GAAC,CAAA,MAAA,CAAA,CAAK,SAAU,CAAA,kCAAA,CAAmC,QAEnD,CAAA,UAAA,CAAA,CAAA,CAAA,CAEJ,CAEJ,CChCO,SAAS4B,EAAa,CAAA,CAC3B,MAAAC,CAAAA,CAAAA,CACA,OAAAC,CAAAA,CAAAA,CACA,SAAAxB,CAAAA,CAAAA,CAAY,EACZ,CAAA,KAAA,CAAAC,CAAQ,CAAA,EACR,CAAA,YAAA,CAAAwB,CAAe,CAAA,IACjB,CAAsB,CAAA,CACpB,GAAM,CACJ,MAAA5D,CAAAA,CAAAA,CACA,aAAAM,CAAAA,CAAAA,CACA,aAAAc,CAAAA,CAAAA,CACA,SAAAH,CAAAA,CAAAA,CACA,SAAAE,CAAAA,CAAAA,CACA,eAAAJ,CAAAA,CACF,CAAIkB,CAAAA,CAAAA,EAEJ,CAAA,GAAI,CAACyB,CAAAA,CAAQ,OAAO,IAAA,CAEpB,IAAMG,CAAAA,CAAwB,IAAM,CAClC9C,CAAgB,EAAA,CAChB4C,CAAQ,GACV,CAEMnB,CAAAA,CAAAA,CAAkB,IAAM,CAC5BvB,CAAU,EAAA,CACV0C,CAAQ,GACV,CAEMlB,CAAAA,CAAAA,CAAkB,IAAM,CAC5BtB,CAAU,EAAA,CACVwC,CAAQ,GACV,CAEMG,CAAAA,CAAAA,CAAe,CACnB,eAAA,CACA3B,CACF,CAAA,CAAE,MAAO,CAAA,OAAO,CAAE,CAAA,IAAA,CAAK,GAAG,CAAA,CAE1B,OACES,IAAAA,CAAAC,QAAA,CAAA,CACG,QAAAe,CAAAA,CAAAA,CAAAA,EACC/B,GAAC,CAAA,KAAA,CAAA,CACC,SAAU,CAAA,yBAAA,CACV,OAAS8B,CAAAA,CAAAA,CACT,IAAK,CAAA,cAAA,CACP,CAEF9B,CAAAA,GAAAA,CAAC,KACC,CAAA,CAAA,SAAA,CAAWiC,CACX,CAAA,KAAA,CAAO1B,CACP,CAAA,IAAA,CAAK,QACL,CAAA,iBAAA,CAAgB,qBAChB,CAAA,YAAA,CAAW,MAEX,CAAA,QAAA,CAAAQ,IAAC,CAAA,KAAA,CAAA,CAAI,SAAU,CAAA,wBAAA,CACb,QAAAA,CAAAA,CAAAA,IAAAA,CAAC,KAAI,CAAA,CAAA,SAAA,CAAU,uBACb,CAAA,QAAA,CAAA,CAAAf,GAAC,CAAA,IAAA,CAAA,CAAG,EAAG,CAAA,qBAAA,CAAsB,SAAU,CAAA,sBAAA,CACpC,QAAA7B,CAAAA,CAAAA,CAAO,KAAM,CAAA,qBAAA,CAChB,CACA6B,CAAAA,GAAAA,CAAC,QACC,CAAA,CAAA,OAAA,CAAS8B,CACT,CAAA,SAAA,CAAU,sBACV,CAAA,YAAA,CAAY3D,CAAO,CAAA,KAAA,CAAM,SACzB,CAAA,IAAA,CAAK,QACN,CAAA,QAAA,CAAA,MAAA,CAED,CACF,CAAA,CAAA,CAAA,CAEA4C,IAAC,CAAA,KAAA,CAAA,CAAI,SAAU,CAAA,qBAAA,CACb,QAAAf,CAAAA,CAAAA,GAAAA,CAAC,GAAE,CAAA,CAAA,SAAA,CAAU,4BACV,CAAA,QAAA,CAAA7B,CAAO,CAAA,KAAA,CAAM,WAChB,CAAA,CAAA,CAEA6B,GAAC,CAAA,KAAA,CAAA,CAAI,SAAU,CAAA,2BAAA,CACZ,QAAA7B,CAAAA,CAAAA,CAAO,QAAS,CAAA,UAAA,CAAW,GAAKkB,CAAAA,CAAAA,EAAa,CAC5C,IAAM6C,CAAezD,CAAAA,CAAAA,EAAe,SAAU,CAAA,IAAA,CAC5CvC,CAAKA,EAAAA,CAAAA,CAAE,UAAemD,GAAAA,CAAAA,CAAS,EACjC,CAAA,EAAG,MAAW,GAAA,UAAA,EAAcA,CAAS,CAAA,YAAA,CAErC,OACEW,GAAAA,CAACyB,CAAA,CAAA,CAEC,QAAUpC,CAAAA,CAAAA,CACV,KAAO6C,CAAAA,CAAAA,CACP,QAAW1C,CAAAA,CAAAA,EAAaD,CAAcF,CAAAA,CAAAA,CAAS,EAAIG,CAAAA,CAAQ,CAC3D,CAAA,QAAA,CAAUH,CAAS,CAAA,QAAA,CAAA,CAJdA,CAAS,CAAA,EAKhB,CAEJ,CAAC,CACH,CAAA,CAAA,CAAA,CAEElB,CAAO,CAAA,KAAA,CAAM,gBAAoBA,EAAAA,CAAAA,CAAO,KAAM,CAAA,eAAA,GAC9C4C,IAAC,CAAA,KAAA,CAAA,CAAI,SAAU,CAAA,sBAAA,CACZ,QAAA5C,CAAAA,CAAAA,CAAAA,CAAO,KAAM,CAAA,gBAAA,EACZ6B,GAAC,CAAA,GAAA,CAAA,CACC,IAAM7B,CAAAA,CAAAA,CAAO,KAAM,CAAA,gBAAA,CACnB,MAAO,CAAA,QAAA,CACP,GAAI,CAAA,qBAAA,CACJ,SAAU,CAAA,qBAAA,CACX,QAED,CAAA,gBAAA,CAAA,CAAA,CAEDA,CAAO,CAAA,KAAA,CAAM,eACZ6B,EAAAA,GAAAA,CAAC,GACC,CAAA,CAAA,IAAA,CAAM7B,CAAO,CAAA,KAAA,CAAM,eACnB,CAAA,MAAA,CAAO,QACP,CAAA,GAAA,CAAI,qBACJ,CAAA,SAAA,CAAU,qBACX,CAAA,QAAA,CAAA,eAAA,CAED,CAEJ,CAAA,CAAA,CAAA,CAAA,CAEJ,CAEA6B,CAAAA,GAAAA,CAAC,KAAI,CAAA,CAAA,SAAA,CAAU,uBACb,CAAA,QAAA,CAAAe,IAAC,CAAA,KAAA,CAAA,CAAI,SAAU,CAAA,wBAAA,CACb,QAAAf,CAAAA,CAAAA,GAAAA,CAAC,QACC,CAAA,CAAA,OAAA,CAASgC,CACT,CAAA,SAAA,CAAU,wCACV,CAAA,IAAA,CAAK,QAEJ,CAAA,QAAA,CAAA7D,CAAO,CAAA,KAAA,CAAM,mBAChB,CAAA,CAAA,CAECA,CAAO,CAAA,QAAA,CAAS,aACf6B,EAAAA,GAAAA,CAAC,QACC,CAAA,CAAA,OAAA,CAASW,CACT,CAAA,SAAA,CAAU,0CACV,CAAA,IAAA,CAAK,QAEJ,CAAA,QAAA,CAAAxC,CAAO,CAAA,KAAA,CAAM,aAChB,CAAA,CAAA,CAGDA,CAAO,CAAA,QAAA,CAAS,cACf6B,EAAAA,GAAAA,CAAC,QACC,CAAA,CAAA,OAAA,CAASY,CACT,CAAA,SAAA,CAAU,sCACV,CAAA,IAAA,CAAK,QAEJ,CAAA,QAAA,CAAAzC,CAAO,CAAA,KAAA,CAAM,aAChB,CAAA,CAAA,CAAA,CAEJ,CACF,CAAA,CAAA,CAAA,CACF,CACF,CAAA,CAAA,CAAA,CACF,CAEJ,CC5FagE,IAAAA,EAAAA,CAA0C,CACrD,UAAA,CAAY,CACV,CACE,EAAI,CAAA,WAAA,CACJ,IAAM,CAAA,WAAA,CACN,WAAa,CAAA,6DAAA,CACb,IAAM,CAAA,WAAA,CACN,QAAU,CAAA,IAAA,CACV,YAAc,CAAA,IAChB,CACA,CAAA,CACE,EAAI,CAAA,WAAA,CACJ,IAAM,CAAA,WAAA,CACN,WAAa,CAAA,yEAAA,CACb,IAAM,CAAA,WAAA,CACN,QAAU,CAAA,KAAA,CACV,YAAc,CAAA,KAChB,CACA,CAAA,CACE,EAAI,CAAA,WAAA,CACJ,IAAM,CAAA,WAAA,CACN,WAAa,CAAA,sDAAA,CACb,IAAM,CAAA,WAAA,CACN,QAAU,CAAA,KAAA,CACV,YAAc,CAAA,KAChB,CACA,CAAA,CACE,EAAI,CAAA,aAAA,CACJ,IAAM,CAAA,aAAA,CACN,WAAa,CAAA,sDAAA,CACb,IAAM,CAAA,aAAA,CACN,QAAU,CAAA,KAAA,CACV,YAAc,CAAA,KAChB,CACF,CAAA,CACA,OAAS,CAAA,OAAA,CACT,cAAgB,CAAA,GAAA,CAChB,UAAY,CAAA,0BAAA,CACZ,cAAgB,CAAA,IAAA,CAChB,aAAe,CAAA,IAAA,CACf,qBAAuB,CAAA,IAAA,CACvB,aAAe,CAAA,GAAA,CACf,iBAAmB,CAAA,IACrB,CAEaC,CAAAA,EAAAA,CAAoC,CAC/C,QAAA,CAAU,QACV,CAAA,MAAA,CAAQ,QACR,CAAA,eAAA,CAAiB,IACjB,CAAA,eAAA,CAAiB,KACjB,CAAA,QAAA,CAAU,KACV,CAAA,SAAA,CAAW,IACX,CAAA,QAAA,CAAU,KACZ,CAAA,CAEaC,EAAoC,CAAA,CAC/C,KAAO,CAAA,uBAAA,CACP,WAAa,CAAA,8LAAA,CACb,aAAe,CAAA,YAAA,CACf,aAAe,CAAA,YAAA,CACf,qBAAuB,CAAA,oBAAA,CACvB,mBAAqB,CAAA,kBAAA,CACrB,SAAW,CAAA,OAAA,CACX,aAAe,CAAA,YAAA,CACf,aAAe,CAAA,4CACjB,CAEaC,CAAAA,EAAAA,CAAoD,CAC/D,QAAA,CAAUH,EACV,CAAA,MAAA,CAAQC,EACR,CAAA,KAAA,CAAOC,EACT","file":"index.mjs","sourcesContent":["import { useCallback } from 'react';\r\nimport { ConsentRecord, UseConsentStorageReturn } from '../types';\r\n\r\nexport function useConsentStorage(storageKey: string): UseConsentStorageReturn {\r\n  const isStorageAvailable = typeof Storage !== 'undefined';\r\n\r\n  const saveConsent = useCallback((record: ConsentRecord) => {\r\n    if (!isStorageAvailable) return;\r\n    \r\n    try {\r\n      const serializedRecord = JSON.stringify(record);\r\n      localStorage.setItem(storageKey, serializedRecord);\r\n    } catch (error) {\r\n      console.warn('Failed to save consent to localStorage:', error);\r\n    }\r\n  }, [storageKey, isStorageAvailable]);\r\n\r\n  const loadConsent = useCallback((): ConsentRecord | null => {\r\n    if (!isStorageAvailable) return null;\r\n    \r\n    try {\r\n      const serializedRecord = localStorage.getItem(storageKey);\r\n      if (!serializedRecord) return null;\r\n      \r\n      const record = JSON.parse(serializedRecord);\r\n      \r\n      // Validate the loaded record\r\n      if (!record || !record.decisions || !record.version) {\r\n        return null;\r\n      }\r\n      \r\n      // Convert timestamp strings back to Date objects\r\n      return {\r\n        ...record,\r\n        lastUpdated: new Date(record.lastUpdated),\r\n        decisions: record.decisions.map((d: any) => ({\r\n          ...d,\r\n          timestamp: new Date(d.timestamp)\r\n        }))\r\n      };\r\n    } catch (error) {\r\n      console.warn('Failed to load consent from localStorage:', error);\r\n      return null;\r\n    }\r\n  }, [storageKey, isStorageAvailable]);\r\n\r\n  const clearConsent = useCallback(() => {\r\n    if (!isStorageAvailable) return;\r\n    \r\n    try {\r\n      localStorage.removeItem(storageKey);\r\n    } catch (error) {\r\n      console.warn('Failed to clear consent from localStorage:', error);\r\n    }\r\n  }, [storageKey, isStorageAvailable]);\r\n\r\n  return {\r\n    saveConsent,\r\n    loadConsent,\r\n    clearConsent,\r\n    isStorageAvailable\r\n  };\r\n}\r\n","import { ConsentRecord, ConsentDecision } from '../types';\r\n\r\nexport function generateSessionId(): string {\r\n  return 'session_' + Date.now() + '_' + Math.random().toString(36).substring(2, 15);\r\n}\r\n\r\nexport function createConsentRecord(\r\n  sessionId: string,\r\n  decisions: ConsentDecision[],\r\n  version: string,\r\n  userId?: string\r\n): ConsentRecord {\r\n  return {\r\n    userId,\r\n    sessionId,\r\n    decisions,\r\n    lastUpdated: new Date(),\r\n    version,\r\n    userAgent: typeof navigator !== 'undefined' ? navigator.userAgent : undefined,\r\n  };\r\n}\r\n\r\nexport function isValidConsentRecord(record: ConsentRecord, currentVersion: string): boolean {\r\n  return Boolean(\r\n    record &&\r\n    record.version === currentVersion &&\r\n    record.decisions &&\r\n    Array.isArray(record.decisions) &&\r\n    record.lastUpdated &&\r\n    record.sessionId\r\n  );\r\n}\r\n\r\nexport function getConsentValue(record: ConsentRecord | null, categoryId: string): boolean {\r\n  if (!record) return false;\r\n  \r\n  const decision = record.decisions.find((d: ConsentDecision) => d.categoryId === categoryId);\r\n  return decision?.status === 'accepted';\r\n}\r\n\r\nexport function mergeConsentDecisions(\r\n  existing: ConsentDecision[],\r\n  updates: ConsentDecision[]\r\n): ConsentDecision[] {\r\n  const merged = [...existing];\r\n  \r\n  updates.forEach(update => {\r\n    const existingIndex = merged.findIndex((d: ConsentDecision) => d.categoryId === update.categoryId);\r\n    if (existingIndex >= 0) {\r\n      merged[existingIndex] = update;\r\n    } else {\r\n      merged.push(update);\r\n    }\r\n  });\r\n  \r\n  return merged;\r\n}\r\n\r\nexport function hasExpiredConsent(record: ConsentRecord, expirationDays: number): boolean {\r\n  if (!record.lastUpdated) return true;\r\n  \r\n  const expirationDate = new Date(record.lastUpdated);\r\n  expirationDate.setDate(expirationDate.getDate() + expirationDays);\r\n  \r\n  return expirationDate <= new Date();\r\n}\r\n\r\nexport function sanitizeConsentRecord(record: ConsentRecord): ConsentRecord {\r\n  return {\r\n    userId: record.userId,\r\n    sessionId: record.sessionId,\r\n    decisions: record.decisions.map((d: ConsentDecision) => ({\r\n      categoryId: d.categoryId,\r\n      status: d.status,\r\n      timestamp: new Date(d.timestamp),\r\n      version: d.version\r\n    })),\r\n    lastUpdated: new Date(record.lastUpdated),\r\n    version: record.version,\r\n    ipAddress: record.ipAddress,\r\n    userAgent: record.userAgent\r\n  };\r\n}\r\n","import { ConsentTheme } from '../types';\r\n\r\nexport function applyConsentTheme(theme: ConsentTheme): void {\r\n  const root = document.documentElement;\r\n  \r\n  // Apply CSS custom properties\r\n  root.style.setProperty('--consent-primary-color', theme.primaryColor);\r\n  root.style.setProperty('--consent-secondary-color', theme.secondaryColor);\r\n  root.style.setProperty('--consent-background-color', theme.backgroundColor);\r\n  root.style.setProperty('--consent-text-color', theme.textColor);\r\n  root.style.setProperty('--consent-border-color', theme.borderColor);\r\n  root.style.setProperty('--consent-border-radius', theme.borderRadius);\r\n  root.style.setProperty('--consent-font-family', theme.fontFamily);\r\n  root.style.setProperty('--consent-font-size', theme.fontSize);\r\n  root.style.setProperty('--consent-button-style', theme.buttonStyle);\r\n  root.style.setProperty('--consent-shadow', theme.shadow ? '0 4px 6px rgba(0, 0, 0, 0.1)' : 'none');\r\n}\r\n\r\nexport function removeConsentTheme(): void {\r\n  const root = document.documentElement;\r\n  \r\n  const themeProperties = [\r\n    '--consent-primary-color',\r\n    '--consent-secondary-color',\r\n    '--consent-background-color',\r\n    '--consent-text-color',\r\n    '--consent-border-color',\r\n    '--consent-border-radius',\r\n    '--consent-font-family',\r\n    '--consent-font-size',\r\n    '--consent-button-style',\r\n    '--consent-shadow'\r\n  ];\r\n  \r\n  themeProperties.forEach(property => {\r\n    root.style.removeProperty(property);\r\n  });\r\n}\r\n\r\nexport function getDefaultTheme(): ConsentTheme {\r\n  return {\r\n    primaryColor: '#007bff',\r\n    secondaryColor: '#6c757d',\r\n    backgroundColor: '#ffffff',\r\n    textColor: '#212529',\r\n    borderColor: '#dee2e6',\r\n    borderRadius: '0.375rem',\r\n    fontFamily: 'system-ui, -apple-system, sans-serif',\r\n    fontSize: '14px',\r\n    buttonStyle: 'solid',\r\n    shadow: true\r\n  };\r\n}\r\n\r\nexport function getDarkTheme(): ConsentTheme {\r\n  return {\r\n    primaryColor: '#0d6efd',\r\n    secondaryColor: '#adb5bd',\r\n    backgroundColor: '#212529',\r\n    textColor: '#ffffff',\r\n    borderColor: '#495057',\r\n    borderRadius: '0.375rem',\r\n    fontFamily: 'system-ui, -apple-system, sans-serif',\r\n    fontSize: '14px',\r\n    buttonStyle: 'solid',\r\n    shadow: true\r\n  };\r\n}\r\n","import React, { createContext, useContext, useState, useEffect, useCallback, ReactNode } from 'react';\r\nimport { \r\n  ConsentContextType, \r\n  PrivacyConsentConfig, \r\n  ConsentRecord, \r\n  ConsentDecision,\r\n  ConsentStatus \r\n} from '../types';\r\nimport { useConsentStorage } from '../hooks/useConsentStorage';\r\nimport { generateSessionId, createConsentRecord } from '../utils/consentUtils';\r\nimport { applyConsentTheme } from '../utils/themeUtils';\r\n\r\nexport interface ConsentProviderProps {\r\n  children: ReactNode;\r\n  config: PrivacyConsentConfig;\r\n}\r\n\r\nconst ConsentContext = createContext<ConsentContextType | undefined>(undefined);\r\n\r\nexport function ConsentProvider({ children, config }: ConsentProviderProps) {\r\n  const [isVisible, setIsVisible] = useState(false);\r\n  const [isPreferencesVisible, setIsPreferencesVisible] = useState(false);\r\n  const [consentRecord, setConsentRecord] = useState<ConsentRecord | null>(null);\r\n  const [sessionId] = useState(() => generateSessionId());\r\n  \r\n  const { saveConsent, loadConsent, clearConsent } = useConsentStorage(config.settings.storageKey);\r\n\r\n  // Initialize consent record\r\n  useEffect(() => {\r\n    const savedConsent = loadConsent();\r\n    \r\n    if (savedConsent && savedConsent.version === config.settings.version) {\r\n      // Check if consent is still valid\r\n      const expirationDate = new Date(savedConsent.lastUpdated);\r\n      expirationDate.setDate(expirationDate.getDate() + config.settings.expirationDays);\r\n      \r\n      if (expirationDate > new Date()) {\r\n        setConsentRecord(savedConsent);\r\n        return;\r\n      }\r\n    }\r\n    \r\n    // Show banner if no valid consent found\r\n    const showDelay = config.settings.autoShowDelay || 0;\r\n    setTimeout(() => {\r\n      if (!savedConsent || savedConsent.version !== config.settings.version) {\r\n        setIsVisible(true);\r\n        config.onBannerShow?.();\r\n      }\r\n    }, showDelay);\r\n  }, [config, loadConsent]);\r\n\r\n  // Apply theme\r\n  useEffect(() => {\r\n    if (config.theme) {\r\n      applyConsentTheme(config.theme);\r\n    }\r\n  }, [config.theme]);\r\n\r\n  // Respect Do Not Track\r\n  useEffect(() => {\r\n    if (config.settings.respectDoNotTrack && navigator.doNotTrack === '1') {\r\n      const record = createConsentRecord(\r\n        sessionId,\r\n        config.settings.categories.map(cat => ({\r\n          categoryId: cat.id,\r\n          status: cat.required ? 'accepted' : 'rejected' as ConsentStatus,\r\n          timestamp: new Date(),\r\n          version: config.settings.version\r\n        })),\r\n        config.settings.version\r\n      );\r\n      setConsentRecord(record);\r\n      saveConsent(record);\r\n      setIsVisible(false);\r\n    }\r\n  }, [config.settings, sessionId, saveConsent]);\r\n\r\n  const showBanner = useCallback(() => {\r\n    setIsVisible(true);\r\n    config.onBannerShow?.();\r\n  }, [config]);\r\n\r\n  const hideBanner = useCallback(() => {\r\n    setIsVisible(false);\r\n    config.onBannerHide?.();\r\n  }, [config]);\r\n\r\n  const showPreferences = useCallback(() => {\r\n    setIsPreferencesVisible(true);\r\n  }, []);\r\n\r\n  const hidePreferences = useCallback(() => {\r\n    setIsPreferencesVisible(false);\r\n  }, []);\r\n\r\n  const updateConsentRecord = useCallback((decisions: ConsentDecision[]) => {\r\n    const record = createConsentRecord(sessionId, decisions, config.settings.version);\r\n    setConsentRecord(record);\r\n    saveConsent(record);\r\n    config.onConsentChange?.(record);\r\n    return record;\r\n  }, [sessionId, config, saveConsent]);\r\n\r\n  const acceptAll = useCallback(() => {\r\n    const decisions: ConsentDecision[] = config.settings.categories.map(category => ({\r\n      categoryId: category.id,\r\n      status: 'accepted' as ConsentStatus,\r\n      timestamp: new Date(),\r\n      version: config.settings.version\r\n    }));\r\n    \r\n    updateConsentRecord(decisions);\r\n    setIsVisible(false);\r\n    setIsPreferencesVisible(false);\r\n    config.onBannerHide?.();\r\n  }, [config, updateConsentRecord]);\r\n\r\n  const rejectAll = useCallback(() => {\r\n    const decisions: ConsentDecision[] = config.settings.categories.map(category => ({\r\n      categoryId: category.id,\r\n      status: category.required ? 'accepted' : 'rejected' as ConsentStatus,\r\n      timestamp: new Date(),\r\n      version: config.settings.version\r\n    }));\r\n    \r\n    updateConsentRecord(decisions);\r\n    setIsVisible(false);\r\n    setIsPreferencesVisible(false);\r\n    config.onBannerHide?.();\r\n  }, [config, updateConsentRecord]);\r\n\r\n  const updateConsent = useCallback((categoryId: string, accepted: boolean) => {\r\n    if (!consentRecord) return;\r\n    \r\n    const existingDecisions = consentRecord.decisions.filter((d: ConsentDecision) => d.categoryId !== categoryId);\r\n    const newDecision: ConsentDecision = {\r\n      categoryId,\r\n      status: accepted ? 'accepted' : 'rejected',\r\n      timestamp: new Date(),\r\n      version: config.settings.version\r\n    };\r\n    \r\n    updateConsentRecord([...existingDecisions, newDecision]);\r\n  }, [consentRecord, config.settings.version, updateConsentRecord]);\r\n\r\n  const getConsent = useCallback((categoryId: string): ConsentStatus => {\r\n    if (!consentRecord) return 'pending';\r\n    \r\n    const decision = consentRecord.decisions.find((d: ConsentDecision) => d.categoryId === categoryId);\r\n    return decision?.status || 'pending';\r\n  }, [consentRecord]);\r\n\r\n  const getAllConsent = useCallback(() => {\r\n    return consentRecord;\r\n  }, [consentRecord]);\r\n\r\n  const hasConsent = useCallback((categoryId: string): boolean => {\r\n    return getConsent(categoryId) === 'accepted';\r\n  }, [getConsent]);\r\n\r\n  const resetConsent = useCallback(() => {\r\n    clearConsent();\r\n    setConsentRecord(null);\r\n    setIsVisible(true);\r\n    setIsPreferencesVisible(false);\r\n    config.onBannerShow?.();\r\n  }, [clearConsent, config]);\r\n\r\n  const contextValue: ConsentContextType = {\r\n    isVisible,\r\n    showBanner,\r\n    hideBanner,\r\n    showPreferences,\r\n    hidePreferences,\r\n    acceptAll,\r\n    rejectAll,\r\n    updateConsent,\r\n    getConsent,\r\n    getAllConsent,\r\n    hasConsent,\r\n    resetConsent,\r\n    isPreferencesVisible,\r\n    consentRecord,\r\n    config\r\n  };\r\n\r\n  return (\r\n    <ConsentContext.Provider value={contextValue}>\r\n      {children}\r\n    </ConsentContext.Provider>\r\n  );\r\n}\r\n\r\nexport function useConsentContext(): ConsentContextType {\r\n  const context = useContext(ConsentContext);\r\n  if (context === undefined) {\r\n    throw new Error('useConsentContext must be used within a ConsentProvider');\r\n  }\r\n  return context;\r\n}\r\n","import { useConsentContext } from '../components/ConsentProvider';\r\nimport { UseConsentReturn } from '../types';\r\n\r\n/**\r\n * Hook to access privacy consent functionality\r\n * Must be used within a ConsentProvider\r\n */\r\nexport function useConsent(): UseConsentReturn {\r\n  return useConsentContext();\r\n}\r\n","import React from 'react';\r\nimport { ConsentBannerProps } from '../types';\r\nimport { useConsent } from '../hooks/useConsent';\r\n\r\nexport function ConsentBanner({ \r\n  className = '', \r\n  style = {}, \r\n  onAcceptAll,\r\n  onRejectAll,\r\n  onManagePreferences,\r\n  children \r\n}: ConsentBannerProps) {\r\n  const { \r\n    isVisible, \r\n    acceptAll, \r\n    rejectAll, \r\n    showPreferences, \r\n    config \r\n  } = useConsent();\r\n\r\n  if (!isVisible) return null;\r\n\r\n  const handleAcceptAll = () => {\r\n    acceptAll();\r\n    onAcceptAll?.();\r\n  };\r\n\r\n  const handleRejectAll = () => {\r\n    rejectAll();\r\n    onRejectAll?.();\r\n  };\r\n\r\n  const handleManagePreferences = () => {\r\n    showPreferences();\r\n    onManagePreferences?.();\r\n  };\r\n\r\n  const bannerClasses = [\r\n    'consent-banner',\r\n    `consent-banner--${config.banner.position}`,\r\n    `consent-banner--${config.banner.layout}`,\r\n    config.banner.animation ? 'consent-banner--animated' : '',\r\n    className\r\n  ].filter(Boolean).join(' ');\r\n\r\n  return (\r\n    <>\r\n      {config.banner.backdrop && <div className=\"consent-backdrop\" />}\r\n      <div \r\n        className={bannerClasses}\r\n        style={style}\r\n        role=\"dialog\"\r\n        aria-labelledby=\"consent-title\"\r\n        aria-describedby=\"consent-description\"\r\n      >\r\n        {children || (\r\n          <div className=\"consent-banner__content\">\r\n            <div className=\"consent-banner__text\">\r\n              <h3 id=\"consent-title\" className=\"consent-banner__title\">\r\n                {config.texts.title}\r\n              </h3>\r\n              <p id=\"consent-description\" className=\"consent-banner__description\">\r\n                {config.texts.description}\r\n              </p>\r\n              {(config.texts.learnMoreUrl || config.texts.privacyPolicyUrl) && (\r\n                <div className=\"consent-banner__links\">\r\n                  {config.texts.learnMoreUrl && (\r\n                    <a \r\n                      href={config.texts.learnMoreUrl}\r\n                      target=\"_blank\"\r\n                      rel=\"noopener noreferrer\"\r\n                      className=\"consent-banner__link\"\r\n                    >\r\n                      {config.texts.learnMoreText}\r\n                    </a>\r\n                  )}\r\n                  {config.texts.privacyPolicyUrl && (\r\n                    <a \r\n                      href={config.texts.privacyPolicyUrl}\r\n                      target=\"_blank\"\r\n                      rel=\"noopener noreferrer\"\r\n                      className=\"consent-banner__link\"\r\n                    >\r\n                      Privacy Policy\r\n                    </a>\r\n                  )}\r\n                </div>\r\n              )}\r\n            </div>\r\n            \r\n            <div className=\"consent-banner__actions\">\r\n              {config.settings.showAcceptAll && (\r\n                <button\r\n                  onClick={handleAcceptAll}\r\n                  className=\"consent-button consent-button--primary\"\r\n                  type=\"button\"\r\n                >\r\n                  {config.texts.acceptAllText}\r\n                </button>\r\n              )}\r\n              \r\n              {config.settings.showDeclineAll && (\r\n                <button\r\n                  onClick={handleRejectAll}\r\n                  className=\"consent-button consent-button--secondary\"\r\n                  type=\"button\"\r\n                >\r\n                  {config.texts.rejectAllText}\r\n                </button>\r\n              )}\r\n              \r\n              {config.settings.showManagePreferences && (\r\n                <button\r\n                  onClick={handleManagePreferences}\r\n                  className=\"consent-button consent-button--ghost\"\r\n                  type=\"button\"\r\n                >\r\n                  {config.texts.managePreferencesText}\r\n                </button>\r\n              )}\r\n            </div>\r\n            \r\n            {config.banner.showCloseButton && (\r\n              <button\r\n                onClick={handleRejectAll}\r\n                className=\"consent-banner__close\"\r\n                aria-label={config.texts.closeText}\r\n                type=\"button\"\r\n              >\r\n                ×\r\n              </button>\r\n            )}\r\n            \r\n            {config.texts.poweredByText && (\r\n              <div className=\"consent-banner__powered-by\">\r\n                {config.texts.poweredByText}\r\n              </div>\r\n            )}\r\n          </div>\r\n        )}\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { ConsentToggleProps } from '../types';\r\n\r\nexport function ConsentToggle({ \r\n  checked, \r\n  onChange, \r\n  disabled = false, \r\n  size = 'md', \r\n  className = '', \r\n  label \r\n}: ConsentToggleProps) {\r\n  const toggleClasses = [\r\n    'consent-toggle',\r\n    `consent-toggle--${size}`,\r\n    checked ? 'consent-toggle--checked' : '',\r\n    disabled ? 'consent-toggle--disabled' : '',\r\n    className\r\n  ].filter(Boolean).join(' ');\r\n\r\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    if (!disabled) {\r\n      onChange(event.target.checked);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <label className={toggleClasses}>\r\n      <input\r\n        type=\"checkbox\"\r\n        checked={checked}\r\n        onChange={handleChange}\r\n        disabled={disabled}\r\n        className=\"consent-toggle__input\"\r\n        aria-label={label}\r\n      />\r\n      <span className=\"consent-toggle__slider\"></span>\r\n      {label && <span className=\"consent-toggle__label\">{label}</span>}\r\n    </label>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { ConsentCategoryProps } from '../types';\r\nimport { ConsentToggle } from './ConsentToggle';\r\n\r\nexport function ConsentCategory({ \r\n  category, \r\n  value, \r\n  onChange, \r\n  disabled = false, \r\n  className = '' \r\n}: ConsentCategoryProps) {\r\n  const categoryClasses = [\r\n    'consent-category',\r\n    disabled ? 'consent-category--disabled' : '',\r\n    category.required ? 'consent-category--required' : '',\r\n    className\r\n  ].filter(Boolean).join(' ');\r\n\r\n  return (\r\n    <div className={categoryClasses}>\r\n      <div className=\"consent-category__header\">\r\n        <h4 className=\"consent-category__name\">{category.name}</h4>\r\n        <ConsentToggle\r\n          checked={value}\r\n          onChange={onChange}\r\n          disabled={disabled}\r\n          size=\"md\"\r\n        />\r\n      </div>\r\n      <p className=\"consent-category__description\">{category.description}</p>\r\n      {category.required && (\r\n        <span className=\"consent-category__required-badge\">\r\n          Required\r\n        </span>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { ConsentModalProps } from '../types';\r\nimport { useConsent } from '../hooks/useConsent';\r\nimport { ConsentCategory } from './ConsentCategory';\r\n\r\nexport function ConsentModal({ \r\n  isOpen, \r\n  onClose, \r\n  className = '', \r\n  style = {},\r\n  showBackdrop = true\r\n}: ConsentModalProps) {\r\n  const { \r\n    config, \r\n    consentRecord, \r\n    updateConsent, \r\n    acceptAll, \r\n    rejectAll,\r\n    hidePreferences\r\n  } = useConsent();\r\n\r\n  if (!isOpen) return null;\r\n\r\n  const handleSavePreferences = () => {\r\n    hidePreferences();\r\n    onClose();\r\n  };\r\n\r\n  const handleAcceptAll = () => {\r\n    acceptAll();\r\n    onClose();\r\n  };\r\n\r\n  const handleRejectAll = () => {\r\n    rejectAll();\r\n    onClose();\r\n  };\r\n\r\n  const modalClasses = [\r\n    'consent-modal',\r\n    className\r\n  ].filter(Boolean).join(' ');\r\n\r\n  return (\r\n    <>\r\n      {showBackdrop && (\r\n        <div \r\n          className=\"consent-modal__backdrop\" \r\n          onClick={onClose}\r\n          role=\"presentation\"\r\n        />\r\n      )}\r\n      <div \r\n        className={modalClasses}\r\n        style={style}\r\n        role=\"dialog\"\r\n        aria-labelledby=\"consent-modal-title\"\r\n        aria-modal=\"true\"\r\n      >\r\n        <div className=\"consent-modal__content\">\r\n          <div className=\"consent-modal__header\">\r\n            <h2 id=\"consent-modal-title\" className=\"consent-modal__title\">\r\n              {config.texts.managePreferencesText}\r\n            </h2>\r\n            <button\r\n              onClick={onClose}\r\n              className=\"consent-modal__close\"\r\n              aria-label={config.texts.closeText}\r\n              type=\"button\"\r\n            >\r\n              ×\r\n            </button>\r\n          </div>\r\n          \r\n          <div className=\"consent-modal__body\">\r\n            <p className=\"consent-modal__description\">\r\n              {config.texts.description}\r\n            </p>\r\n            \r\n            <div className=\"consent-modal__categories\">\r\n              {config.settings.categories.map((category) => {\r\n                const currentValue = consentRecord?.decisions.find(\r\n                  d => d.categoryId === category.id\r\n                )?.status === 'accepted' || category.defaultValue;\r\n                \r\n                return (\r\n                  <ConsentCategory\r\n                    key={category.id}\r\n                    category={category}\r\n                    value={currentValue}\r\n                    onChange={(accepted) => updateConsent(category.id, accepted)}\r\n                    disabled={category.required}\r\n                  />\r\n                );\r\n              })}\r\n            </div>\r\n            \r\n            {(config.texts.privacyPolicyUrl || config.texts.cookiePolicyUrl) && (\r\n              <div className=\"consent-modal__links\">\r\n                {config.texts.privacyPolicyUrl && (\r\n                  <a \r\n                    href={config.texts.privacyPolicyUrl}\r\n                    target=\"_blank\"\r\n                    rel=\"noopener noreferrer\"\r\n                    className=\"consent-modal__link\"\r\n                  >\r\n                    Privacy Policy\r\n                  </a>\r\n                )}\r\n                {config.texts.cookiePolicyUrl && (\r\n                  <a \r\n                    href={config.texts.cookiePolicyUrl}\r\n                    target=\"_blank\"\r\n                    rel=\"noopener noreferrer\"\r\n                    className=\"consent-modal__link\"\r\n                  >\r\n                    Cookie Policy\r\n                  </a>\r\n                )}\r\n              </div>\r\n            )}\r\n          </div>\r\n          \r\n          <div className=\"consent-modal__footer\">\r\n            <div className=\"consent-modal__actions\">\r\n              <button\r\n                onClick={handleSavePreferences}\r\n                className=\"consent-button consent-button--primary\"\r\n                type=\"button\"\r\n              >\r\n                {config.texts.savePreferencesText}\r\n              </button>\r\n              \r\n              {config.settings.showAcceptAll && (\r\n                <button\r\n                  onClick={handleAcceptAll}\r\n                  className=\"consent-button consent-button--secondary\"\r\n                  type=\"button\"\r\n                >\r\n                  {config.texts.acceptAllText}\r\n                </button>\r\n              )}\r\n              \r\n              {config.settings.showDeclineAll && (\r\n                <button\r\n                  onClick={handleRejectAll}\r\n                  className=\"consent-button consent-button--ghost\"\r\n                  type=\"button\"\r\n                >\r\n                  {config.texts.rejectAllText}\r\n                </button>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","// Main exports\r\nexport { ConsentProvider, useConsentContext } from './components/ConsentProvider';\r\nexport { ConsentBanner } from './components/ConsentBanner';\r\nexport { ConsentModal } from './components/ConsentModal';\r\nexport { ConsentCategory } from './components/ConsentCategory';\r\nexport { ConsentToggle } from './components/ConsentToggle';\r\n\r\n// Hooks\r\nexport { useConsent } from './hooks/useConsent';\r\nexport { useConsentStorage } from './hooks/useConsentStorage';\r\n\r\n// Utilities\r\nexport { \r\n  generateSessionId, \r\n  createConsentRecord, \r\n  isValidConsentRecord,\r\n  getConsentValue,\r\n  mergeConsentDecisions,\r\n  hasExpiredConsent,\r\n  sanitizeConsentRecord\r\n} from './utils/consentUtils';\r\n\r\nexport { \r\n  applyConsentTheme, \r\n  removeConsentTheme, \r\n  getDefaultTheme, \r\n  getDarkTheme \r\n} from './utils/themeUtils';\r\n\r\n// Types\r\nexport type {\r\n  ConsentType,\r\n  ConsentStatus,\r\n  BannerPosition,\r\n  BannerLayout,\r\n  ConsentCategory as ConsentCategoryType,\r\n  ConsentDecision,\r\n  ConsentRecord,\r\n  PrivacySettings,\r\n  BannerConfig,\r\n  ConsentTexts,\r\n  ConsentTheme,\r\n  PrivacyConsentConfig,\r\n  ConsentContextType,\r\n  ConsentBannerProps,\r\n  ConsentModalProps,\r\n  ConsentCategoryProps,\r\n  ConsentButtonProps,\r\n  ConsentToggleProps,\r\n  UseConsentReturn,\r\n  UseConsentStorageReturn,\r\n  UseConsentValidationReturn,\r\n  ConsentChangeHandler,\r\n  ConsentEventHandler,\r\n  ConsentErrorHandler\r\n} from './types';\r\n\r\n// Import types for internal use\r\nimport type {\r\n  PrivacySettings,\r\n  BannerConfig,\r\n  ConsentTexts,\r\n  PrivacyConsentConfig\r\n} from './types';\r\n\r\n// Default configurations\r\nexport const defaultPrivacySettings: PrivacySettings = {\r\n  categories: [\r\n    {\r\n      id: 'necessary',\r\n      name: 'Necessary',\r\n      description: 'Essential cookies required for basic website functionality.',\r\n      type: 'necessary',\r\n      required: true,\r\n      defaultValue: true\r\n    },\r\n    {\r\n      id: 'analytics',\r\n      name: 'Analytics',\r\n      description: 'Cookies that help us understand how visitors interact with our website.',\r\n      type: 'analytics',\r\n      required: false,\r\n      defaultValue: false\r\n    },\r\n    {\r\n      id: 'marketing',\r\n      name: 'Marketing',\r\n      description: 'Cookies used to deliver personalized advertisements.',\r\n      type: 'marketing',\r\n      required: false,\r\n      defaultValue: false\r\n    },\r\n    {\r\n      id: 'preferences',\r\n      name: 'Preferences',\r\n      description: 'Cookies that remember your preferences and settings.',\r\n      type: 'preferences',\r\n      required: false,\r\n      defaultValue: false\r\n    }\r\n  ],\r\n  version: '1.0.0',\r\n  expirationDays: 365,\r\n  storageKey: 'asafarim-privacy-consent',\r\n  showDeclineAll: true,\r\n  showAcceptAll: true,\r\n  showManagePreferences: true,\r\n  autoShowDelay: 1000,\r\n  respectDoNotTrack: true\r\n};\r\n\r\nexport const defaultBannerConfig: BannerConfig = {\r\n  position: 'bottom',\r\n  layout: 'banner',\r\n  showCloseButton: true,\r\n  showCompanyLogo: false,\r\n  blocking: false,\r\n  animation: true,\r\n  backdrop: false\r\n};\r\n\r\nexport const defaultConsentTexts: ConsentTexts = {\r\n  title: 'We value your privacy',\r\n  description: 'We use cookies and similar technologies to provide the best experience on our website. Some are necessary for functionality, while others help us understand usage and improve our services.',\r\n  acceptAllText: 'Accept All',\r\n  rejectAllText: 'Reject All',\r\n  managePreferencesText: 'Manage Preferences',\r\n  savePreferencesText: 'Save Preferences',\r\n  closeText: 'Close',\r\n  learnMoreText: 'Learn More',\r\n  poweredByText: 'Powered by @asafarim/react-privacy-consent'\r\n};\r\n\r\nexport const defaultPrivacyConsentConfig: PrivacyConsentConfig = {\r\n  settings: defaultPrivacySettings,\r\n  banner: defaultBannerConfig,\r\n  texts: defaultConsentTexts\r\n};\r\n"]}